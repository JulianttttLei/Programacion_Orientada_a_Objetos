BorderedMorph subclass: #AccesoDeInicio	instanceVariableNames: 'menu sistema cuadro bEntrada bCancelar aviso'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!AccesoDeInicio methodsFor: 'grafica' stamp: 'Anonymous 7/6/2024 23:18'!agregarTitulo:unTitulo|titulo |titulo:= StringMorph new.titulo contents: unTitulo;font: (LogicalFont familyName:       StandardFonts defaultFont familyName pointSize: 20);         color: Color white; emphasis: TextEmphasis bold.^titulo.        ! !!AccesoDeInicio methodsFor: 'grafica' stamp: 'Anonymous 7/7/2024 12:08'!agregarMenuAcceso| origen|origen:= self innerBounds origin.menu:= BorderedMorph new.menu borderWidth: 3;          borderColor: Color darkGray;          color: (Color fromHexString: '#D4C3CA');          extent: 500@768;          position: origen + (433@0).self addMorph: menu.! !!AccesoDeInicio methodsFor: 'grafica' stamp: 'Anonymous 7/7/2024 12:27'!agregarRectanguloTitulo:unTitulo|titulo rectangulo|rectangulo:= BorderedMorph new.rectangulo extent: 500@100;           borderWidth:3;           borderColor:Color darkGray;  position: menu position;color: (Color fromHexString: '#292c35').titulo:= self agregarTitulo: unTitulo.menu addMorph: rectangulo.rectangulo addMorph: titulo.titulo position: rectangulo bounds center - (titulo extent // 2). ! !!AccesoDeInicio methodsFor: 'grafica' stamp: 'Anonymous 7/7/2024 12:28'!agregarCuadroBotoncuadro:= BorderedMorph new.cuadro extent: 300@170;           borderWidth:2;           borderColor:Color black;  position: menu position + (100@530);useRoundedCorners;color: ( Color lightGray ).menu addMorph: cuadro.! !!AccesoDeInicio methodsFor: 'grafica' stamp: 'Anonymous 8/9/2024 12:36'!agregarTextoIndicador: unTexto|textoInd|textoInd := TextMorph new.textoInd  contents: unTexto;font: (LogicalFont familyName:       StandardFonts defaultFont familyName pointSize: 16);         color: Color black;lock;wrapFlag: true;backgroundColor: (Color fromHexString: '#436850');extent: 500@100;position: menu position + (0@100).     menu addMorph: textoInd.! !!AccesoDeInicio methodsFor: 'inicializador' stamp: 'Anonymous 7/8/2024 20:07'!agregarSistema: unSistemasistema:=unSistema.! !!AccesoDeInicio methodsFor: 'inicializador' stamp: 'Anonymous 7/23/2024 13:09'!initialize super initialize.self extent: 1366@768;     color:  (Color fromHexString: '#5c6972').self agregarMenuAcceso.self agregarCuadroBoton.self botonCancelar.bCancelar mouseAction: [self delete.  ].! !!AccesoDeInicio methodsFor: 'boton' stamp: 'Anonymous 7/7/2024 12:53'!botonEntrada: unTexto |texto|bEntrada   := BotonAccion new.texto := bEntrada    editColor: Color white yEtiquetaBold: unTexto  yTamañoFuente:16.bEntrada  label: texto;               extent: 200@50;           position: cuadro position + (50@23.3);           useRoundedCorners.                 menu  addMorph: bEntrada .! !!AccesoDeInicio methodsFor: 'boton' stamp: 'Anonymous 7/7/2024 12:55'!botonCancelar|texto |bCancelar   := BotonAccion new.texto := bCancelar    editColor: Color white yEtiquetaBold: 'Cancelar'  yTamañoFuente:16.bCancelar  label: texto;               extent: 200@50;           position: cuadro position + (50@96.6);           color: (Color fromHexString: '#ff0000');           useRoundedCorners.                 menu  addMorph: bCancelar .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AccesoDeInicio class	instanceVariableNames: ''!!AccesoDeInicio class methodsFor: 'constructor' stamp: 'Anonymous 8/5/2024 12:46'!crearAccesoInicio:unSistema|acceso|acceso := self new.acceso agregarSistema: unSistema.^acceso.! !AccesoDeInicio subclass: #AccesoAdministrador	instanceVariableNames: 'nombreUsuarioA claveA'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!AccesoAdministrador methodsFor: 'grafica' stamp: 'Anonymous 7/9/2024 18:24'!agregarCamposAdmin"Nombre de usuario"nombreUsuarioA:= CamposDeTexto crearCampoTexto.nombreUsuarioA agregarTextoSugerencia: 'Ingrese el nombre de usuario';     position: menu position + (90@250). menu  addMorph: nombreUsuarioA . "contraseña"claveA:= CamposDeTexto crearCampoTexto.claveA agregarTextoSugerencia: 'Ingrese la contraseña';     position: menu position + (90@320). menu  addMorph: claveA . ! !!AccesoAdministrador methodsFor: 'accionBoton' stamp: 'Anonymous 8/5/2024 12:41'!accederAlSistema"Este método abre  la ventana para el menu administrador"|admin verifica|(nombreUsuarioA campoLleno &  claveA campoLleno )ifTrue:[ admin:= Administrador crear.	verifica:= admin validarAcceso: (nombreUsuarioA getTexto) yContraseña:(claveA getTexto).	verifica 	ifTrue:[ self delete. MenuAdmin crearMenuA:sistema. ]	ifFalse:[  aviso:=AvisoVisual  crearAvisoAlertaOk:  'Los datos son INCORRECTOS.'. 				nombreUsuarioA borrarTexto . claveA borrarTexto.  	           	]. 	]ifFalse:[	aviso:=AvisoVisual  crearAvisoAlertaOk:'Por favor, complete todos los campos. '.	  	     	].(aviso)ifNotNil:[self addMorph: aviso.             	 aviso getBotonOk  mouseAction: [ aviso delete ].].! !!AccesoAdministrador methodsFor: 'inicializador' stamp: 'Anonymous 8/1/2024 19:11'!initialize super initialize.self agregarRectanguloTitulo: 'ACCESO ADMINISTRADOR'.self agregarTextoIndicador: 'BIENVENIDO ADMINISTRADORPara acceder al sistema, por favor complete sus datos de inicio de sesión.'.self agregarCamposAdmin.self botonEntrada: 'Acceder'.bEntrada color: (Color r:0 g:0.58 b:0.96 ).bEntrada mouseAction:[ self accederAlSistema. ].! !Object subclass: #Administrador	instanceVariableNames: 'nombreUsuario contraseña'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!Administrador methodsFor: 'aplicacion' stamp: 'Anonymous 7/6/2024 16:14'!validarAcceso:unNombreUsu yContraseña: unaClave|ingresa|ingresa := (nombreUsuario = unNombreUsu ) & (contraseña  = unaClave ).^ingresa.! !!Administrador methodsFor: 'inicializador' stamp: 'Anonymous 8/9/2024 15:48'!inicializaAdminnombreUsuario:= 'julian'.contraseña:='julian'.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Administrador class	instanceVariableNames: ''!!Administrador class methodsFor: 'constructor' stamp: 'Anonymous 7/6/2024 16:19'!crear|admin|admin:= self new.admin inicializaAdmin.^admin.  ! !Object subclass: #Autor	instanceVariableNames: 'nombre apellido dni'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!Autor methodsFor: 'observadores' stamp: 'Anonymous 6/29/2024 23:51'!getDni^dni.! !!Autor methodsFor: 'aplicacion' stamp: 'Anonymous 8/9/2024 16:44'!informacionAutor|infoAu|infoAu:= '{ Autor:  |dni: ', dni, '| |nombre: ',nombre, '|  |apellido: ',apellido,' | }',String cr.^infoAu.! !!Autor methodsFor: 'inicializador' stamp: 'Anonymous 6/29/2024 19:39'!inicializaDni: unDni conNombre: unNom conApellido: unApe dni:= unDni. nombre:= unNom.apellido:= unApe.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Autor class	instanceVariableNames: ''!!Autor class methodsFor: 'constructor' stamp: 'Anonymous 6/29/2024 19:40'!crearDni: unDni conNombre: unNom conApellido: unApe |autor|autor:= self new.autor inicializaDni: unDni conNombre: unNom conApellido: unApe .^autor.! !Morph subclass: #AvisoVisual	instanceVariableNames: 'bSi bNo bOk cartel rectangulo'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!AvisoVisual methodsFor: 'grafica' stamp: 'Anonymous 6/29/2024 17:45'!agregarBotonOkself botonOk.self addMorph: bOk.! !!AvisoVisual methodsFor: 'grafica' stamp: 'Anonymous 7/9/2024 13:11'!agregarAviso: unAviso| texto |cartel:=TextMorph new.texto:= unAviso asText.texto addAttribute: (TextEmphasis bold)from: 1 to: texto size.cartel  contents: texto ;                    wrapFlag:true;    font:(LogicalFont familyName:       StandardFonts defaultFont familyName pointSize: 16);                extent:490@150;         position: rectangulo position + (5@5);         color: Color white;       lock.    rectangulo  addMorph: cartel .      	! !!AvisoVisual methodsFor: 'grafica' stamp: 'Anonymous 6/29/2024 17:45'!agregarBotonSiYNoself botonSi .self botonNo.self addMorph: bSi.self addMorph: bNo.! !!AvisoVisual methodsFor: 'grafica' stamp: 'Anonymous 7/9/2024 13:29'!agregarRectanguloAvisorectangulo:=BorderedMorph new.rectangulo borderWidth: 4;          color:   (Color fromHexString: '#292c35');          extent: 500@150;            position: (self bounds center) - (rectangulo extent // 2).self addMorph: rectangulo.            	! !!AvisoVisual methodsFor: 'observadoras' stamp: 'Anonymous 6/29/2024 17:37'!getBotonNo^bNo.! !!AvisoVisual methodsFor: 'observadoras' stamp: 'Anonymous 6/29/2024 17:37'!getBotonOk^bOk.! !!AvisoVisual methodsFor: 'observadoras' stamp: 'Anonymous 6/29/2024 17:37'!getBotonSi^bSi.! !!AvisoVisual methodsFor: 'inicializador' stamp: 'Anonymous 7/9/2024 13:08'!initialize super initialize.self color: (Color black alpha:0.8);extent: 1366@768.self agregarRectanguloAviso.! !!AvisoVisual methodsFor: 'boton' stamp: 'Anonymous 7/9/2024 13:07'!botonOk|texto |bOk  := BotonAccion new. texto:= bOk  editColor: Color white yEtiquetaBold:'Ok' yTamañoFuente:14.bOk   position: (rectangulo   position) +(220@150) ;           label: texto;               extent: 60@60;           borderColor: (Color lightGray );           borderWidth: 3;           color: (Color black);           useRoundedCorners.! !!AvisoVisual methodsFor: 'boton' stamp: 'Anonymous 7/7/2024 17:58'!botonSi|texto |bSi  := BotonAccion new. texto:= bSi  editColor: Color white yEtiquetaBold:'Si' yTamañoFuente:14.bSi   position: (rectangulo  position) +(126.66@150) ;           label: texto;               extent: 60@60;           borderColor: (Color lightGray );           borderWidth: 3;           color: (Color black);           useRoundedCorners.! !!AvisoVisual methodsFor: 'boton' stamp: 'Anonymous 7/7/2024 17:59'!botonNo|texto |bNo  := BotonAccion new. texto:= bNo   editColor: Color white yEtiquetaBold:'No' yTamañoFuente:14.bNo   position: (rectangulo  position) +(313.32@150) ;           label: texto;               extent: 60@60;           borderColor: (Color lightGray );           borderWidth: 3;           color: (Color black);           useRoundedCorners.! !!AvisoVisual methodsFor: 'modificador' stamp: 'Anonymous 7/9/2024 10:33'!bordeColorRectangulo:unColorrectangulo borderColor: unColor.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AvisoVisual class	instanceVariableNames: ''!!AvisoVisual class methodsFor: 'constructor' stamp: 'Anonymous 8/1/2024 13:17'!crearAvisoAlertaOk:unAviso|aviso|aviso:= self new.aviso agregarBotonOk.aviso bordeColorRectangulo: Color yellow.aviso agregarAviso:unAviso."aviso openInWorld."^aviso.! !!AvisoVisual class methodsFor: 'constructor' stamp: 'Anonymous 7/9/2024 10:45'!crearAvisoMalSiYNo:unAviso|aviso|aviso:= self new.aviso agregarBotonSiYNo.aviso bordeColorRectangulo: Color red.aviso agregarAviso:unAviso. ^aviso.! !!AvisoVisual class methodsFor: 'constructor' stamp: 'Anonymous 8/1/2024 13:37'!crearAvisoBienSiYNo:unAviso|aviso|aviso:= self new.aviso agregarBotonSiYNo.aviso bordeColorRectangulo: Color green.aviso agregarAviso:unAviso."aviso openInWorld." ^aviso.! !!AvisoVisual class methodsFor: 'constructor' stamp: 'Anonymous 8/1/2024 13:37'!crearAvisoBienOk:unAviso|aviso|aviso:= self new.aviso agregarBotonOk.aviso bordeColorRectangulo: Color green.aviso agregarAviso:unAviso."aviso openInWorld."^aviso.! !!AvisoVisual class methodsFor: 'constructor' stamp: 'Anonymous 8/1/2024 13:37'!crearAvisoMalOk:unAviso|aviso|aviso:= self new.aviso agregarBotonOk.aviso bordeColorRectangulo: Color red.aviso agregarAviso:unAviso."aviso openInWorld."^aviso.! !Object subclass: #Biblioteca	instanceVariableNames: 'id direccion nombre telContacto colPrestamos colLibros tiempoPrestado nombreRepresentante diasMulta'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!Biblioteca methodsFor: 'inicializador' stamp: 'Anonymous 6/24/2024 16:09'!inicializaId:unaId yDireccion:unaDir yNombre:unNom yTel:unTel yTiempoPrestado:unTiemPres yNombreRepresentante:unNomRepid:=unaId.direccion:=unaDir.nombre:=unNom.telContacto:=unTel.colPrestamos:=OrderedCollection new.colLibros:= OrderedCollection new.tiempoPrestado:=unTiemPres.nombreRepresentante:=unNomRep.diasMulta:=6.! !!Biblioteca methodsFor: 'inicializador' stamp: 'Anonymous 8/2/2024 10:34'!agregarPrestamo:unPrestamocolPrestamos add: unPrestamo.self changed:colPrestamos.! !!Biblioteca methodsFor: 'inicializador' stamp: 'Anonymous 8/7/2024 08:38'!agregarLibro: unLibrocolLibros add: unLibro.self changed: colLibros. ! !!Biblioteca methodsFor: 'modificadores' stamp: 'Anonymous 7/16/2024 20:07'!quitarLibro:unLibrocolLibros remove: unLibro.self changed: colLibros.! !!Biblioteca methodsFor: 'modificadores' stamp: 'Anonymous 2/21/2024 20:45'!setTelContacto:unTeltelContacto:=unTel.! !!Biblioteca methodsFor: 'modificadores' stamp: 'Anonymous 8/12/2024 00:34'!quitarPrestamo: unPrestamocolPrestamos remove:unPrestamo.self changed:colPrestamos.! !!Biblioteca methodsFor: 'aplicacion' stamp: 'Anonymous 6/23/2024 21:51'!hayPrestamoActivo:unUsuario|prestamoAct|prestamoAct := colPrestamos anySatisfy:[:prestamo| prestamo verificaUsuarioYPrestamoAct: unUsuario ].^prestamoAct.! !!Biblioteca methodsFor: 'aplicacion' stamp: 'Anonymous 7/16/2024 21:02'!obtieneLibro:unIsbn|libroAux|libroAux:= colLibros detect:[:libro| (unIsbn = libro getISBN)] ifNone:[nil].^libroAux.! !!Biblioteca methodsFor: 'aplicacion' stamp: 'Anonymous 6/24/2024 13:28'!buscarUsuarioRetrasados|usuarioRetrasado atrasado usuario |usuarioRetrasado := OrderedCollection new.colPrestamos do: [ :prestamo| atrasado:= prestamo verificaUsuarioAtrasado.	              (atrasado) ifTrue:[ usuario:= prestamo getUsuario.		               (usuarioRetrasado includes: usuario)  ifFalse: [      			             usuarioRetrasado add: usuario.  			                                ].    	                    	  ].	 ].^usuarioRetrasado.! !!Biblioteca methodsFor: 'aplicacion' stamp: 'Anonymous 7/26/2024 00:23'!buscarPrestamosActivos:unUsuario|colActivoPrest |colActivoPrest  := colPrestamos select:[: prestamo|  prestamo verificaUsuarioYPrestamoAct: unUsuario. ]. ^colActivoPrest.! !!Biblioteca methodsFor: 'aplicacion' stamp: 'Anonymous 8/10/2024 12:14'!devolverPrestamo: unUsuario |devuelto activoPrest |devuelto := false.activoPrest := self buscarPrestamoUsuario: unUsuario.(activoPrest  ) ifNotNil: [devuelto := true. 	                          activoPrest devolverLibro: diasMulta. 	          ].                      ^devuelto.! !!Biblioteca methodsFor: 'aplicacion' stamp: 'Anonymous 7/2/2024 21:31'!mismoISBN: unId|igualId|	igualId:= colLibros anySatisfy: [ :libro | libro getISBN = unId ].^igualId.! !!Biblioteca methodsFor: 'aplicacion' stamp: 'Anonymous 8/6/2024 10:58'!informacionBiblioteca |infoBiblio infoLibro|infoLibro:= String streamContents: [ :info| 	colLibros do:[:libro|   info nextPutAll: (libro informacionLibro).  ]. ].infoBiblio:= 'BIBLIOTECA: |id: ',id, '| |nombre: ',nombre,'| |dirección: ',direccion, '| |días de multa: ',(diasMulta asString), '| |tiempo prestado:  ',(tiempoPrestado asString),' días| |representante: ',nombreRepresentante ,'| ',String cr, self datosPrestamo,infoLibro.^infoBiblio.! !!Biblioteca methodsFor: 'aplicacion' stamp: 'Anonymous 8/4/2024 20:13'!datosBiblioSelec|datosBiblio|datosBiblio:= 'ID: ',id,'-->',nombre.^datosBiblio.! !!Biblioteca methodsFor: 'aplicacion' stamp: 'Anonymous 8/24/2024 21:30'!verificarCondiciones:unUsuario| cond suspendido prestamoAct   verificaCond verifica  |cond:=0.prestamoAct:=self hayPrestamoActivo: unUsuario.suspendido:=unUsuario seEncuentraSuspendido.verificaCond:=(prestamoAct not) & (suspendido not).verificaCond ifTrue:[verifica:= unUsuario verificaFechaVencPlus.	     cond:= 1.	 verifica 	ifTrue:[cond:=2].      	].^cond.! !!Biblioteca methodsFor: 'aplicacion' stamp: 'Anonymous 8/6/2024 11:00'!datosPrestamo|infoPrest|infoPrest:= String streamContents: [ :info| 	 colPrestamos  do:[:prestamo ||usuario|  usuario:=prestamo getUsuario.		                                          info  nextPutAll:'| Dni Usuario: ';		                                                nextPutAll: usuario getDni;		                                                 nextPutAll: '|';  		                                             nextPutAll: (prestamo informacionPrestamo). 		                                       ]. ].^infoPrest.! !!Biblioteca methodsFor: 'aplicacion' stamp: 'Anonymous 8/24/2024 21:53'!registrarPrestamo:unUsuario yColLib:unaColLibros| registroPrest  prestamoAudioLibro prestamoLibro  librosAudio librosAux cond|librosAudio:=OrderedCollection new.registroPrest:=false.cond:=self verificarCondiciones: unUsuario.cond ~= 0ifTrue:[	cond = 2ifTrue:[librosAudio:=unaColLibros  select:[:libro| libro esAudioLibro .].].librosAux:=unaColLibros  reject:[:libro| libro esAudioLibro .].	                  (librosAudio isNotEmpty)        ifTrue:[tiempoPrestado:= tiempoPrestado / 2.	                         			 prestamoAudioLibro := Prestamo crearPrestConTiempo: tiempoPrestado  yUsuario:unUsuario  yColLibros:(librosAudio).    					 self agregarPrestamo:prestamoAudioLibro.			registroPrest:=true.		         		].		(librosAux isNotEmpty)ifTrue:[prestamoLibro := Prestamo crearPrestConTiempo: tiempoPrestado  yUsuario:unUsuario  yColLibros:(librosAux).			 self agregarPrestamo: prestamoLibro.        registroPrest:=true.			]. 		]. ^registroPrest.! !!Biblioteca methodsFor: 'aplicacion' stamp: 'Anonymous 6/30/2024 20:44'!buscarPrestamoUsuario:unUsuario|activoPrest |activoPrest  := colPrestamos detect:[: prestamo| prestamo verificaUsuarioYPrestamoAct: unUsuario. ] ifNone: [nil].^activoPrest.! !!Biblioteca methodsFor: 'observadoras' stamp: 'Anonymous 7/28/2024 01:20'!getColLibros^colLibros.! !!Biblioteca methodsFor: 'observadoras' stamp: 'Anonymous 6/29/2024 18:19'!getId ^id.! !!Biblioteca methodsFor: 'observadoras' stamp: 'Anonymous 7/31/2024 17:54'!getTiempoPrestado^tiempoPrestado.! !!Biblioteca methodsFor: 'observadoras' stamp: 'Anonymous 7/31/2024 17:52'!getDireccion^direccion.! !!Biblioteca methodsFor: 'observadoras' stamp: 'Anonymous 7/31/2024 17:53'!getTelContacto^telContacto.! !!Biblioteca methodsFor: 'observadoras' stamp: 'Anonymous 7/31/2024 17:53'!getRepresentante^nombreRepresentante.! !!Biblioteca methodsFor: 'observadoras' stamp: 'Anonymous 6/30/2024 16:57'!getPrestamos^colPrestamos.! !!Biblioteca methodsFor: 'observadoras' stamp: 'Anonymous 7/26/2024 11:57'!getDiasMulta^diasMulta.! !!Biblioteca methodsFor: 'observadoras' stamp: 'Anonymous 7/19/2024 11:23'!getNombre ^nombre.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Biblioteca class	instanceVariableNames: ''!!Biblioteca class methodsFor: 'constructor' stamp: 'Anonymous 6/23/2024 16:32'!crearId:unaId yDireccion:unaDir yNombre:unNom yTel:unTel yTiempoPrestado:unTiemPres yNombreRepresentante:unNomRep|biblioteca|biblioteca :=self new.biblioteca inicializaId:unaId yDireccion:unaDir yNombre:unNom yTel:unTel yTiempoPrestado:unTiemPres yNombreRepresentante:unNomRep.^biblioteca.! !SimpleButtonMorph subclass: #BotonAccion	instanceVariableNames: 'bloque'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!BotonAccion methodsFor: 'aplicacion' stamp: 'Anonymous 6/3/2024 17:13'!mouseUp: unEventosuper mouseUp: unEvento.bloque value.! !!BotonAccion methodsFor: 'aplicacion' stamp: 'Anonymous 6/3/2024 17:14'!mouseAction: unBloque^bloque:= unBloque.! !!BotonAccion methodsFor: 'editBoton' stamp: 'Anonymous 6/14/2024 21:01'!editColor:unColor yEtiquetaBold:unaEtiq yTamañoFuente:unTam"este metodo cambia el color y pone en negrita (bold) un string"|editEtiq|editEtiq  := (Text string: unaEtiq attribute: TextEmphasis bold).editEtiq  addAttribute: (TextColor color: unColor) from: 1 to: editEtiq  size.editEtiq  addAttribute: (TextFontReference toFont:(LogicalFont				 familyName: StandardFonts defaultFont familyName				 pointSize: unTam ))from: 1 to: editEtiq size.^editEtiq.! !!BotonAccion methodsFor: 'editBoton' stamp: 'Anonymous 6/14/2024 21:10'!editColor:unColor yEtiquetaBold:unaEtiq "este metodo cambia el color y pone en negrita (bold) un string"|editEtiq|editEtiq  := (Text string: unaEtiq attribute: TextEmphasis bold).editEtiq  addAttribute: (TextColor color: unColor) from: 1 to: editEtiq  size.^editEtiq.! !RubTextFieldMorph subclass: #CamposDeTexto	instanceVariableNames: ''	classVariableNames: ''	package: 'TrabajoFinalPOO'!!CamposDeTexto methodsFor: 'observadores' stamp: 'Anonymous 7/1/2024 17:42'!getTexto|texto|texto:= self text asString.^texto.! !!CamposDeTexto methodsFor: 'grafica' stamp: 'Anonymous 7/31/2024 11:26'!agregarTexto:unTextoself  setText:  (Text string: unTexto attributes: {TextEmphasis bold.  TextFontReference toFont: (LogicalFont familyName: StandardFonts defaultFont familyName pointSize: 15)}).! !!CamposDeTexto methodsFor: 'grafica' stamp: 'Anonymous 7/6/2024 13:34'!agregarTextoSugerencia:textoSug| texto  |texto  := (Text string: textoSug  attribute: TextEmphasis bold).texto  addAttribute: (TextFontReference toFont:(LogicalFont				 familyName: StandardFonts defaultFont familyName				 pointSize: 15 ))from: 1 to: texto size.self ghostText: texto.				                 ! !!CamposDeTexto methodsFor: 'aplicacion' stamp: 'Anonymous 6/29/2024 20:01'!borrarTextoself setText: ''.! !!CamposDeTexto methodsFor: 'aplicacion' stamp: 'Anonymous 6/29/2024 20:05'!campoLleno|verifica|verifica := self text asString ~= ''.^ verifica.! !!CamposDeTexto methodsFor: 'inicializador' stamp: 'Anonymous 8/7/2024 14:38'!initialize super initialize.self extent: 320@50.  self borderWidth: 2.self borderColor: Color black.self color: (Color fromHexString: '#003152') .self font:(LogicalFont				 familyName: StandardFonts defaultFont familyName				 pointSize: 17) .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CamposDeTexto class	instanceVariableNames: ''!!CamposDeTexto class methodsFor: 'constructor' stamp: 'Anonymous 6/27/2024 13:09'!crearCampoTexto|campo|campo:= self new.^campo.! !Object subclass: #Imagen	instanceVariableNames: 'imagen colImagenes'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!Imagen methodsFor: 'observador' stamp: 'Anonymous 8/8/2024 18:21'!getImagen^imagen.! !!Imagen methodsFor: 'inicializador' stamp: 'Anonymous 8/8/2024 22:03'!crearFoto:posimagen  := ImageMorph new.imagen image: (ColorForm fromFileNamed: (colImagenes at:pos)  ).    ^imagen.! !!Imagen methodsFor: 'inicializador' stamp: 'Anonymous 8/13/2024 11:47'!cargaImagenLogo|logo ruta|ruta:=self detectaRuta.logo:= ruta /'logo.jpg'.imagen  := ImageMorph new.imagen image: (ColorForm fromFileNamed: logo).! !!Imagen methodsFor: 'inicializador' stamp: 'Anonymous 8/13/2024 11:49'!cargaImagenes |i1 i2 i3 i4 i5 i6 i7 i8 ruta|colImagenes :=OrderedCollection new.ruta:=self detectaRuta.i1:= ruta/'logo.jpg'.i2:= ruta/'biblioteca.jpg'.i3:= ruta/'iconoAB.png'.i4:= ruta/'iconoCMU.png'.i5:= ruta/'iconoSP.png'.i6:= ruta/'iconoDP.png'.i7:= ruta/'iconoIB.png'.i8:= ruta/'iconoIU.png'.colImagenes add: i1;add: i2;add: i3;add: i4;add: i5;add: i6;add: i7;add: i8.! !!Imagen methodsFor: 'inicializador' stamp: 'Anonymous 8/13/2024 11:57'!detectaRuta"Este método detecta la ruta donde se encuentran las fotos"|rutaUbicada directorioImagen|rutaUbicada:= FileSystem workingDirectory .directorioImagen:= 'fotos'.rutaUbicada:=rutaUbicada/directorioImagen.^rutaUbicada.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Imagen class	instanceVariableNames: ''!!Imagen class methodsFor: 'constructor' stamp: 'Anonymous 8/8/2024 18:22'!crearFotografiaLogo|foto|foto:= self new.foto cargaImagenLogo.^foto.! !!Imagen class methodsFor: 'constructor' stamp: 'Anonymous 8/8/2024 18:23'!crearFotografia|foto|foto:= self new.foto cargaImagenes.^foto.! !AccesoDeInicio subclass: #IniciarSesionUsuario	instanceVariableNames: 'dniU claveU'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!IniciarSesionUsuario methodsFor: 'inicializador' stamp: 'Anonymous 7/9/2024 21:12'!initialize super initialize.self agregarRectanguloTitulo: 'ACCESO USUARIO'.self agregarTextoIndicador: 'POR FAVOR, complete con sus datos para iniciar sesión.'.self agregarCamposSesionUsu.self botonEntrada: 'Iniciar Sesión'.bEntrada color: (Color r:0 g:0.58 b:0.96 ).bEntrada mouseAction:[ self iniciarSesion.  ].! !!IniciarSesionUsuario methodsFor: 'grafica' stamp: 'Anonymous 7/9/2024 20:06'!agregarCamposSesionUsu"dni de usuario"dniU:= CamposDeTexto crearCampoTexto.dniU agregarTextoSugerencia: 'Ingrese el DNI de usuario';     position: menu position + (90@270). menu  addMorph: dniU ."contraseña de usuario"claveU:= CamposDeTexto crearCampoTexto.claveU agregarTextoSugerencia: 'Ingrese la contraseña';     position: menu position + (90@340). menu  addMorph: claveU .  ! !!IniciarSesionUsuario methodsFor: 'accionBoton' stamp: 'Anonymous 8/5/2024 12:42'!iniciarSesion"Este método abre la ventana del menu usuario"| usuarioAux|(dniU campoLleno & claveU campoLleno )ifTrue:[  usuarioAux := sistema validaAcceso: (dniU getTexto) yClave:(claveU getTexto).    usuarioAux     ifNotNil:[self delete. 	MenuUsuario crearMenuConSistema:sistema conUsuario:usuarioAux.]     ifNil:[ aviso:=AvisoVisual  crearAvisoAlertaOk:  'Los datos son INCORRECTOS.'. 			       	dniU borrarTexto . claveU borrarTexto.  	          	]. 		]ifFalse:[ aviso:=AvisoVisual  crearAvisoAlertaOk:'Por favor, complete todos los campos. '.	].(aviso)ifNotNil:[self addMorph: aviso.             	 aviso getBotonOk  mouseAction: [ aviso delete ].].! !BorderedMorph subclass: #Inicio	instanceVariableNames: 'cuadro bRegUsu bAdmin bUsu rect'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!Inicio methodsFor: 'boton' stamp: 'Anonymous 8/8/2024 17:27'!botonCancelar|text bSalir|bSalir := BotonAccion new.    text := bSalir  editColor:( Color white) yEtiquetaBold:'Salir' yTamañoFuente:16.  bSalir position:   (cuadro position) + (75@600) ;           label: text;         extent: 250@50;            borderColor: Color darkGray ;         borderWidth: 5;         color: (Color fromHexString: '#ff0000' );         useRoundedCorners.         cuadro addMorph: bSalir.bSalir mouseAction: [self delete.  ].! !!Inicio methodsFor: 'boton' stamp: 'Anonymous 8/8/2024 17:28'!botonAccesoUsuario|text|bUsu := BotonAccion new.      text := bUsu  editColor:( Color white) yEtiquetaBold:'Acceso Usuario' yTamañoFuente:16.  bUsu  position:   (cuadro position) + (75@400) ;           label: text;         extent: 250@50;             borderColor: Color darkGray;         borderWidth: 5;         color: (Color r:0 g:0.65 b:0 );           useRoundedCorners.          cuadro addMorph: bUsu.         ! !!Inicio methodsFor: 'boton' stamp: 'Anonymous 8/8/2024 17:29'!botonAccesoAdmin|text |bAdmin := BotonAccion new.      text := bAdmin  editColor:( Color white) yEtiquetaBold:'Acceso Administrador' yTamañoFuente:16.  bAdmin  position:   (cuadro position) + (75@300) ;           label: text;         extent: 250@50;             borderColor: Color darkGray;         borderWidth: 5;         color: (Color black );         useRoundedCorners.         cuadro addMorph: bAdmin .   ! !!Inicio methodsFor: 'boton' stamp: 'Anonymous 8/8/2024 17:28'!botonRegistrarUsuario|text |bRegUsu  := BotonAccion new.      text := bRegUsu   editColor:( Color white) yEtiquetaBold:'Registrar Usuario' yTamañoFuente:16.  bRegUsu   position:   (cuadro position) + (75@500) ;           label: text;         extent: 250@50;             borderColor: Color darkGray;         borderWidth: 5;         color: (Color r:0 g:0.58 b:0.96 );         useRoundedCorners.         cuadro addMorph: bRegUsu  .   ! !!Inicio methodsFor: 'grafica' stamp: 'Anonymous 8/8/2024 23:25'!agregarCuadrorect := BorderedMorph  new.rect color: (Color r: 0.11 g:0.16  b:0.32 );               borderColor: Color black;              borderWidth: 4;              position: cuadro position ;            extent: 390@240;                           useRoundedCorners.self addMorph: rect.! !!Inicio methodsFor: 'grafica' stamp: 'Anonymous 8/8/2024 20:46'!agregarLogo|logo imagen|logo:= Imagen crearFotografiaLogo.imagen:=logo getImagen.imagen position: rect position + (95@0).rect addMorph:  imagen.! !!Inicio methodsFor: 'grafica' stamp: 'Anonymous 8/8/2024 20:27'!agregaCuadroCentral" Creo un cuadro en el medio para poder posicionar los botones "cuadro := BorderedMorph  new.cuadro color: (Color fromHexString: '#C0C0C0'); "color silver"              borderColor: Color black;              borderWidth:2;             extent: 390@768;                  position:    (self  bounds  center - (cuadro  extent // 2))  ;          useRoundedCorners.self addMorph: cuadro.! !!Inicio methodsFor: 'inicializador' stamp: 'Anonymous 8/8/2024 23:23'!initialize |sistema acceso |super initialize.self color: (Color fromHexString: '#2F4F4F');extent:1366@768.   " Creamos un cuadro en el medio para poder posicionar los 4 botones"self agregaCuadroCentral.self agregarCuadro. self agregarLogo."Cargamos el sistema con datos"sistema:= Sistema crearSistConDatos.sistema addDependent:self."Botones "self botonAccesoAdmin.bAdmin mouseAction: [acceso:= AccesoAdministrador crearAccesoInicio: sistema.	                    self addMorph: acceso.].self botonAccesoUsuario.bUsu mouseAction: [ acceso:=IniciarSesionUsuario crearAccesoInicio: sistema. 	                    self addMorph: acceso.].self botonRegistrarUsuario.bRegUsu mouseAction:[acceso:= RegistroDeUsuario crearAccesoInicio: sistema. 	                   self addMorph: acceso.].self botonCancelar.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Inicio class	instanceVariableNames: ''!!Inicio class methodsFor: 'constructor' stamp: 'Anonymous 8/9/2024 13:17'!crear |inicio|inicio:= self new. inicio openInWorld.! !Object subclass: #Libro	instanceVariableNames: 'isbn nombre editorial añoEdiccion prestado colAutores'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!Libro methodsFor: 'aplicacion' stamp: 'Anonymous 6/24/2024 11:13'!libroPrestadoprestado := true.! !!Libro methodsFor: 'aplicacion' stamp: 'Anonymous 8/4/2024 19:12'!datosAutor|infoAutor|infoAutor:= String streamContents: [ :info| 	 colAutores do:[:libro | info nextPutAll: (libro informacionAutor).  ]. ].^infoAutor.! !!Libro methodsFor: 'aplicacion' stamp: 'Anonymous 8/4/2024 20:52'!informacionLibro| infoLibro  |infoLibro:= '[ LIBRO: | isbn: ',isbn, '| |nombre:  ', nombre, '| |editorial:  ',editorial, '|  |año de edicción:  ', (añoEdiccion asString), '| |prestado: ', (prestado asString), '|'.	^infoLibro.	! !!Libro methodsFor: 'aplicacion' stamp: 'Anonymous 8/10/2024 13:45'!getTipo^self subclassResponsibility.! !!Libro methodsFor: 'aplicacion' stamp: 'Anonymous 6/23/2024 19:42'!esAudioLibro^false.! !!Libro methodsFor: 'aplicacion' stamp: 'Anonymous 6/24/2024 15:33'!libroNoPrestadoprestado:= false.! !!Libro methodsFor: 'inicializador' stamp: 'Anonymous 6/25/2024 13:17'!agregarAutor: unAutorcolAutores add: unAutor.self changed: colAutores.! !!Libro methodsFor: 'inicializador' stamp: 'Anonymous 8/7/2024 12:30'!inicializaISBN: unId yNombre: unNombre yEditorial: unaEdi yAñoEdi:unAño yAutores:unaColAutorescolAutores:=OrderedCollection new.isbn:= unId.nombre:=unNombre .editorial:=unaEdi.añoEdiccion:=unAño.unaColAutores do:[:autor| self agregarAutor:autor].prestado:=false. ! !!Libro methodsFor: 'observadoras' stamp: 'Anonymous 6/23/2024 20:00'!getPrestado^prestado.! !!Libro methodsFor: 'observadoras'!getNombre.^nombre.! !!Libro methodsFor: 'observadoras' stamp: 'Anonymous 7/4/2024 10:51'!getColAutores^colAutores.! !!Libro methodsFor: 'observadoras' stamp: 'Anonymous 7/2/2024 21:29'!getISBN^isbn.! !!Libro methodsFor: 'observadoras' stamp: 'Anonymous 7/4/2024 10:51'!getAñoEdiccion^añoEdiccion.! !!Libro methodsFor: 'observadoras' stamp: 'Anonymous 7/4/2024 10:55'!getEditorial^editorial.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Libro class	instanceVariableNames: ''!!Libro class methodsFor: 'constructor' stamp: 'Anonymous 7/2/2024 16:33'!crearISBN: unId yNombre: unNombre yEditorial: unaEdi yAñoEdi:unAño yAutores:unaCol |libro|libro:=self new.libro inicializaISBN: unId yNombre: unNombre yEditorial: unaEdi yAñoEdi:unAño yAutores:unaCol .^libro.! !Libro subclass: #AudioLibro	instanceVariableNames: ''	classVariableNames: ''	package: 'TrabajoFinalPOO'!!AudioLibro methodsFor: 'aplicacion' stamp: 'Anonymous 6/23/2024 19:42'!esAudioLibro ^true.! !!AudioLibro methodsFor: 'aplicacion' stamp: 'Anonymous 8/25/2024 01:05'!informacionLibro |infoAudio|infoAudio:= super informacionLibro,' |tipo: audio-libro | ]',String cr,(self datosAutor),String cr.^infoAudio.! !!AudioLibro methodsFor: 'aplicacion' stamp: 'Anonymous 8/5/2024 22:09'!getTipo^'audio-libro'asString.! !Libro subclass: #LibroElectronico	instanceVariableNames: ''	classVariableNames: ''	package: 'TrabajoFinalPOO'!!LibroElectronico methodsFor: 'aplicacion' stamp: 'Anonymous 8/25/2024 01:05'!informacionLibro |infoElec|infoElec:= super informacionLibro,' |tipo: electrónico | ]',String cr,(self datosAutor),String cr.^infoElec.! !!LibroElectronico methodsFor: 'aplicacion' stamp: 'Anonymous 8/5/2024 22:09'!getTipo^'electrónico'asString.! !Libro subclass: #LibroImpreso	instanceVariableNames: ''	classVariableNames: ''	package: 'TrabajoFinalPOO'!!LibroImpreso methodsFor: 'aplicacion' stamp: 'Anonymous 8/25/2024 01:05'!informacionLibro |infoImpreso|infoImpreso := super informacionLibro,' |tipo: impreso | ]',String cr,(self datosAutor),String cr.^infoImpreso.! !!LibroImpreso methodsFor: 'aplicacion' stamp: 'Anonymous 8/5/2024 22:09'!getTipo^'impreso'asString.! !ScrollPane subclass: #ListadoDeInformacion	instanceVariableNames: ''	classVariableNames: ''	package: 'TrabajoFinalPOO'!!ListadoDeInformacion methodsFor: 'grafica' stamp: 'Anonymous 8/4/2024 19:42'!agregarTextoDeBiblioInfo:biblio|mensaje|mensaje:=biblio informacionBiblioteca.self agregarTexto:mensaje yTam: 800@400.      ! !!ListadoDeInformacion methodsFor: 'grafica' stamp: 'Anonymous 8/9/2024 16:35'!agregarTextoConColBiblioInt:biblioIntUsuario |mensaje|mensaje:= biblioIntUsuario isNotEmpty  ifTrue:[ mensaje := String streamContents: [:stream |    biblioIntUsuario  do: [:b |        stream              nextPutAll: b datosBiblioSelec;               cr.].].]ifFalse:['No hay biblioteca agregada.'].self agregarTexto:mensaje yTam: 320@300.             ! !!ListadoDeInformacion methodsFor: 'grafica' stamp: 'Anonymous 8/4/2024 21:14'!agregarTextoDeBiblioIntPrestamo:colBiblioInt yUsuario:unUsuario|mensaje| mensaje := String streamContents: [:infoPrestamo |    colBiblioInt   do: [:b | |colPrestamos |        infoPrestamo             nextPutAll: 'Id biblioteca: ';            nextPutAll: b getId asString;            nextPutAll: '-->'.             colPrestamos:= b buscarPrestamosActivos: unUsuario.            (colPrestamos isNotEmpty)            ifTrue:[ colPrestamos do: [:prestamo| |colLibros |			                infoPrestamo nextPutAll: prestamo informacionPrestamo.		                colLibros:= prestamo getColLibrosPrest.		      		           colLibros do:[:libro| infoPrestamo nextPutAll: libro informacionLibro.	  ].		         		         ].	         	]	       ifFalse:[ infoPrestamo nextPutAll: 'no tiene préstamos activos.'].	     infoPrestamo  cr.	].].	self agregarTexto:mensaje yTam: 320@300.             ! !!ListadoDeInformacion methodsFor: 'inicializador' stamp: 'Anonymous 8/25/2024 01:13'!agregarTexto:unMensaje yTam:unTam| msj texto|     msj:= unMensaje asText. texto := TextMorph new.texto      contents: msj;           lock;           wrapFlag: true;           font: (LogicalFont				  familyName: StandardFonts defaultFont familyName				 pointSize: 15);          extent:4000@800000.      self scroller addMorph: texto.self  extent: unTam.! !!ListadoDeInformacion methodsFor: 'inicializador' stamp: 'Anonymous 7/31/2024 11:36'!initialize super initialize.self  color:   (Color fromHexString: '#292c35').            ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ListadoDeInformacion class	instanceVariableNames: ''!!ListadoDeInformacion class methodsFor: 'constructor' stamp: 'Anonymous 7/31/2024 21:08'!crearListaDeInfo|lista|lista:= self new.^lista.! !BorderedMorph subclass: #MenuAdmin	instanceVariableNames: 'menu sistema'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!MenuAdmin methodsFor: 'boton' stamp: 'Anonymous 7/24/2024 20:52'!botonCancelar|texto bSalir origen|origen:=self innerBounds origin.bSalir  := BotonAccion new. texto:= bSalir   editColor: Color black  yEtiquetaBold:'Salir' yTamañoFuente:18. bSalir    position: origen + (1166@0);           label: texto;               extent: 200@50;           borderWidth: 6;           borderColor: Color darkGray;           color: (Color fromHexString: '#ff0000');           useRoundedCorners.        self addMorph: bSalir.^bSalir.! !!MenuAdmin methodsFor: 'boton' stamp: 'Anonymous 7/23/2024 09:40'!botonOperador: unNombre |texto bOperador|bOperador   := BotonAccion new.texto := bOperador    editColor: Color black yEtiquetaBold: unNombre  yTamañoFuente:15.bOperador             label: texto;                          borderColor:(Color fromHexString: '#006270');           borderWidth: 5;           color: (Color fromHexString: '#00e0c7');           extent: 350@50;            useRoundedCorners.menu addMorph: bOperador.^bOperador.! !!MenuAdmin methodsFor: 'inicializador' stamp: 'Anonymous 7/10/2024 21:24'!agregarSistema: unSistemasistema:=unSistema.! !!MenuAdmin methodsFor: 'inicializador' stamp: 'Anonymous 8/4/2024 22:57'!initialize |bAgregarLibro bAgregarBiblioteca bQuitarLibro  bSalir acceso|super initialize.self extent: 1366@768;      color: (Color fromHexString: '#D4C3CA').self agregarMenu.self agregarTituloMenu.self agregarTextoIndicador.bAgregarBiblioteca :=self botonOperador: 'Agregar Biblioteca'.bAgregarBiblioteca position: menu position + (25@180).                     bAgregarLibro:= self botonOperador: 'Agregar Libro/s'.bAgregarLibro position: menu position + (25@290).bQuitarLibro:= self botonOperador: 'Quitar Libro/s'.bQuitarLibro position: menu position + (25@400).bSalir:=self botonCancelar.                     bAgregarBiblioteca mouseAction: [ acceso:=	AgregarBiblioteca  crearInterfazOpcionAdmin: sistema. 		                                self addMorph: acceso.].bAgregarLibro mouseAction: [ 	                       acceso:=AgregarLibro crearInterfazAdminConSelecBiblio:sistema.	                      self addMorph: acceso. ].bQuitarLibro mouseAction: [acceso:= QuitarLibro crearInterfazAdminConSelecBiblio:sistema.	                            self addMorph: acceso ].bSalir  mouseAction: [ self delete. ].! !!MenuAdmin methodsFor: 'grafica' stamp: 'Anonymous 7/10/2024 20:52'!agregarTextoIndicador|textoInd rectTextInd|rectTextInd:=BorderedMorph new.rectTextInd color: (Color darkGray );            extent: 400@45;            position:menu position + (0@75).               textoInd:=StringMorph new.textoInd color: (Color white);         font: (LogicalFont familyName:       StandardFonts defaultFont familyName pointSize: 15);        contents: 'Seleccione una opción del menú: ';        position: rectTextInd position + (30@8).rectTextInd addMorph: textoInd.menu addMorph: rectTextInd.! !!MenuAdmin methodsFor: 'grafica' stamp: 'Anonymous 7/17/2024 19:28'!agregarTituloMenu| subtitulo rectSubtitulo|rectSubtitulo:= BorderedMorph new.rectSubtitulo color: (Color fromHexString: '#436850');              borderColor:Color black;              borderWidth: 4;              extent: 400@75;              position: menu position.subtitulo := StringMorph new.subtitulo  font: (LogicalFont familyName:       StandardFonts defaultFont familyName pointSize: 18);       contents: 'MENÚ ADMINISTRADOR';        emphasis: TextEmphasis bold;color: Color black;position: rectSubtitulo  position + (80@25).rectSubtitulo addMorph: subtitulo.menu addMorph: rectSubtitulo.! !!MenuAdmin methodsFor: 'grafica' stamp: 'Anonymous 7/23/2024 09:39'!agregarMenumenu:= BorderedMorph new.menu      borderWidth: 2;          borderColor: Color black;          color: (Color lightGray);          extent: 400@500;          position: self innerBounds origin + (483@0).self addMorph: menu.self agregarTituloMenu.self agregarTextoIndicador.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MenuAdmin class	instanceVariableNames: ''!!MenuAdmin class methodsFor: 'constructor' stamp: 'Anonymous 8/3/2024 18:33'!crearMenuA:unSistema|menuAdmin|menuAdmin:=self new.menuAdmin agregarSistema: unSistema.menuAdmin openInWorld.^menuAdmin.! !BorderedMorph subclass: #MenuUsuario	instanceVariableNames: 'imagen bCerrar sistema usuario menu'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!MenuUsuario methodsFor: 'boton' stamp: 'Anonymous 7/19/2024 23:16'!botonOperador: unNombre  |texto bOperador|bOperador := BotonAccion new. texto:= bOperador editColor: Color white yEtiquetaBold:unNombre yTamañoFuente:16 .bOperador position: (menu  position ) +(5@110) ;           label: texto;           extent: 300@50;           borderColor:(Color fromHexString: '#AC9362');           borderWidth: 5;           color: (Color fromHexString: '#410200');                      useRoundedCorners.        menu addMorph: bOperador.^bOperador.! !!MenuUsuario methodsFor: 'boton' stamp: 'Anonymous 6/21/2024 12:04'!botonCerrar: cuadDer|text|bCerrar := BotonAccion new.    text := bCerrar  editColor:( Color black) yEtiquetaBold:'Cerrar' yTamañoFuente:16.  bCerrar position:   (cuadDer  position) +(75@2)   ;           label: text;         extent: 175@40;            borderColor: Color black;         borderWidth: 7;         color: (Color red );"fromHexString: '#E74C3C '"         useRoundedCorners.        cuadDer addMorph: bCerrar.  ! !!MenuUsuario methodsFor: 'grafica' stamp: 'Anonymous 8/8/2024 21:35'!agregaMenu"Este metodo agrega una estante que va a simular un menu de opciones"| origen |origen := self innerBounds origin.menu := BorderedMorph new.menu color: (Color fromHexString: '#6E2C00');           position: origen;            extent: 450@705;           borderColor: Color black;           borderWidth: 2.self addMorph: menu.! !!MenuUsuario methodsFor: 'grafica' stamp: 'Anonymous 7/19/2024 21:51'!agregaMorphInicio|inicio origen|origen := self innerBounds origin.inicio := StringMorph new.inicio position:origen + (1200@300);       extent: 150@70;       color: Color black;       backgroundColor: (Color fromHexString:'#FFC30B');       contents: 'INICIO';       font: (LogicalFont				 familyName: StandardFonts defaultFont familyName				 pointSize: 20);			emphasis: TextEmphasis bold.       self addMorph: inicio. ! !!MenuUsuario methodsFor: 'grafica' stamp: 'Anonymous 6/19/2024 11:16'!agregaRectanguloSup|rectSup origen|origen := self innerBounds origin.rectSup:= Morph new.rectSup color: (Color r: 0.11 g:0.16  b:0.32 );            position:origen + (300@0);            extent: 1065@250.self addMorph: rectSup.^rectSup. ! !!MenuUsuario methodsFor: 'grafica' stamp: 'Anonymous 6/18/2024 21:43'!agregaMiniRectSupDer:marcoSup|miniRect |miniRect := Morph new. miniRect  position: (self innerBounds origin) + (1100@0);          extent:270@100;          color: (Color fromHexString: '#5D6D7E').marcoSup addMorph: miniRect.! !!MenuUsuario methodsFor: 'grafica' stamp: 'Anonymous 8/8/2024 21:36'!agregarTextoIndicador|textoInd rectTextInd|rectTextInd:=BorderedMorph new.rectTextInd color: (Color darkGray );            extent: 450@45;            position:menu position + (0@75).               textoInd:=StringMorph new.textoInd color: (Color white);         font: (LogicalFont familyName:       StandardFonts defaultFont familyName pointSize: 15);        contents: 'Seleccione una opción del menú: ';        position: rectTextInd position + (30@8).rectTextInd addMorph: textoInd.menu addMorph: rectTextInd.! !!MenuUsuario methodsFor: 'grafica' stamp: 'Anonymous 8/8/2024 23:31'!agregarTituloMenu| titulo rectTitulo|rectTitulo:= BorderedMorph new.rectTitulo color: (Color fromHexString: '#7B68EE');              borderColor:Color black;              borderWidth: 4;              extent: 450@75;              position: menu position.titulo := StringMorph new.titulo  font: (LogicalFont familyName:       StandardFonts defaultFont familyName pointSize: 20);       contents: 'MENÚ USUARIO';        emphasis: TextEmphasis bold;color: Color black;position: rectTitulo  bounds center - (titulo extent // 2).rectTitulo addMorph: titulo.menu addMorph: rectTitulo.! !!MenuUsuario methodsFor: 'grafica' stamp: 'Anonymous 7/19/2024 22:00'!agregaBarraHoriz:marcoSup|barra1 |barra1:= StringMorph new.barra1 position: marcoSup position  + (0@220);      backgroundColor:Color black;      color: (Color fromHexString: '#DAA520');      contents: 'ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ';		 font: (LogicalFont				 familyName: StandardFonts defaultFont familyName				 pointSize: 17).	marcoSup addMorph: barra1 .					! !!MenuUsuario methodsFor: 'grafica' stamp: 'Anonymous 7/19/2024 17:38'!agregaCuadradoSup:marcoSup |cuad|cuad := Morph new.cuad  extent: (250@250);         color: Color darkGray.marcoSup addMorph: cuad.^cuad.! !!MenuUsuario methodsFor: 'accionBoton' stamp: 'Anonymous 8/24/2024 12:59'!cambiarModalidadDeUsuario|aviso  verificaTipoUsu |verificaTipoUsu:=usuario esPlus.aviso:=AvisoVisual crearAvisoBienSiYNo: '¿Estás seguro de que deseas cambiar de modalidad? .'.(verificaTipoUsu)ifTrue:[aviso:=AvisoVisual crearAvisoBienSiYNo: '¿Estás seguro de que deseas cambiar de modalidad? Si usted cambia a una cuenta de USUARIO (normal), perderá los préstamos de audiolibros que tiene actualmente.'.].self addMorph: aviso.aviso getBotonNo mouseAction: [ aviso delete. ]. aviso getBotonSi mouseAction:[aviso delete.	usuario addDependent: self.sistema addDependent: self.(verificaTipoUsu)ifTrue:[ usuario cambiarAUsuario: sistema.	         aviso:=AvisoVisual crearAvisoBienOk:'Te has cambiado a USUARIO (normal)  con éxito'. ]ifFalse:[usuario cambiarAPlus: sistema.	        aviso:=AvisoVisual crearAvisoBienOk:'Te has cambiado a USUARIO PLUS  con éxito'. ]. self addMorph: aviso.aviso getBotonOk mouseAction: [ self delete.].].! !!MenuUsuario methodsFor: 'inicializador' stamp: 'Anonymous 7/17/2024 17:06'!agregarUsuario:unUsuariousuario:=unUsuario.! !!MenuUsuario methodsFor: 'inicializador' stamp: 'Anonymous 8/8/2024 21:48'!initialize | rectSup  cuad bAgregarBiblioInt bCambiarUsuario bInfoUsuario bInfoBiblio bSolicitarPrest bDevolverPrest eligeU|super initialize.self color: (Color fromHexString: '#B38B6D');extent:1366@768."rectangulo superior izquierdo, pegado al Menu estante"rectSup := self agregaRectanguloSup."cuadrado superior izquierdo" cuad:=self agregaCuadradoSup:rectSup.cuad position:  rectSup position  ."cuadrado superior derecho" cuad:=self agregaCuadradoSup:rectSup.cuad position:  rectSup position  + (815@0). "barra decoracion para rectangulo superior"self agregaBarraHoriz: rectSup  ."Morph inicio"self agregaMorphInicio."Menu estante"self agregaMenu.self colocaImagen: rectSup  . self agregarTituloMenu.self agregarTextoIndicador."Botones"self botonCerrar: cuad.bCerrar mouseAction: [ self delete ].bAgregarBiblioInt:=self botonOperador: 'Agregar Biblioteca de Intéres'.bAgregarBiblioInt position: menu position + (50@170).bCambiarUsuario:= self botonOperador: 'Cambiar Tipo de Usuario'.bCambiarUsuario position: menu position + (50@260).bSolicitarPrest:= self botonOperador: 'Solcitar Préstamo'.bSolicitarPrest  position: menu position + (50@350).bDevolverPrest:= self botonOperador: 'Devolver Préstamo'.bDevolverPrest  position: menu position + (50@440).bInfoBiblio := self botonOperador: 'Información de Biblioteca'.bInfoBiblio   position: menu position + (50@530).bInfoUsuario := self botonOperador: 'Mi Información'.bInfoUsuario   position: menu position + (50@620).bAgregarBiblioInt   mouseAction: [eligeU:= AgregarBibliotecaDeInteres  crearInterfazUsuario:usuario yCol: (sistema getColBibliotecas). self addMorph: eligeU. ].bCambiarUsuario   mouseAction: [ self cambiarModalidadDeUsuario. ].bSolicitarPrest mouseAction: [eligeU:=SolicitarPrestamo   crearInterfazSPConUsuario:usuario. self addMorph: eligeU. ].bDevolverPrest mouseAction: [ eligeU := DevolverPrestamo  crearInterfazDPConUsuario:usuario. self addMorph: eligeU. ].bInfoUsuario mouseAction: [ eligeU:=MiInformacion  crearInformacionUsuario:usuario . self addMorph: eligeU.]. bInfoBiblio mouseAction: [eligeU:= InformacionBiblioteca crearInfoBiblioCol:(sistema getColBibliotecas). self addMorph: eligeU.  ].  ! !!MenuUsuario methodsFor: 'inicializador' stamp: 'Anonymous 7/17/2024 16:52'!agregarMenuSistema:unSistemasistema:=unSistema.! !!MenuUsuario methodsFor: 'imagen' stamp: 'Anonymous 6/18/2024 21:31'!colocaLogoEn:marcoSup imagen position: (marcoSup bounds center)- (imagen extent // 2).marcoSup addMorph: imagen.! !!MenuUsuario methodsFor: 'imagen' stamp: 'Anonymous 6/19/2024 11:08'!colocaBiblioteca:marcoSup |centro |centro := (marcoSup  bounds center) - (imagen extent // 2).imagen position: centro + (0@350).self addMorph: imagen.! !!MenuUsuario methodsFor: 'imagen' stamp: 'Anonymous 8/8/2024 22:42'!colocaIcono:unaPosimagen position: menu position + (unaPos).menu addMorph: imagen.! !!MenuUsuario methodsFor: 'imagen' stamp: 'Anonymous 8/8/2024 23:16'!colocaImagen:marcoSup|foto pos|foto:= Imagen crearFotografia.pos:=1.8 timesRepeat: [	imagen:= foto crearFoto:pos.	(pos = 1 ) ifTrue: [self colocaLogoEn: marcoSup. ].	(pos = 2 ) ifTrue: [self colocaBiblioteca:marcoSup. ].	(pos = 3 ) ifTrue: [self colocaIcono:370@160.].	(pos = 4 ) ifTrue: [self colocaIcono:370@250. ].	(pos = 5 ) ifTrue: [self colocaIcono:370@340. ].	(pos = 6 ) ifTrue: [self colocaIcono:370@430. ].	(pos = 7 ) ifTrue: [self colocaIcono:370@520.].	(pos = 8 ) ifTrue: [self colocaIcono:370@610. ].	pos := pos + 1.	]. ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MenuUsuario class	instanceVariableNames: ''!!MenuUsuario class methodsFor: 'constructor' stamp: 'Anonymous 8/2/2024 11:28'!crearMenuConSistema:sistema conUsuario:unUsuario|menu|menu:=self new.menu agregarMenuSistema: sistema.menu agregarUsuario: unUsuario.menu openInWorld.^menu.! !Object subclass: #Prestamo	instanceVariableNames: 'fechaPrestamo fechaEntrega usuario colLibros fechaLimite'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!Prestamo methodsFor: 'modificadores' stamp: 'Anonymous 7/26/2024 00:30'!setUsuario:unUsuario usuario:=unUsuario.! !!Prestamo methodsFor: 'aplicacion' stamp: 'Anonymous 6/24/2024 15:48'!devolverLibro:diasMulta|demorado|fechaEntrega:= Date today.demorado := fechaEntrega > fechaLimite.colLibros do: [: libro | libro libroNoPrestado.  ].(demorado)ifTrue: [ usuario suspender: diasMulta.  ].! !!Prestamo methodsFor: 'aplicacion' stamp: 'Anonymous 8/10/2024 13:18'!informacionPrestamo|infoPrest|infoPrest:= '[ PRESTAMO: |fecha de préstamo:', fechaPrestamo asString, '| |fecha de entrega: - | |fecha limite: ',fechaLimite asString,'| ] ',String cr.	^infoPrest.! !!Prestamo methodsFor: 'aplicacion' stamp: 'Anonymous 7/1/2024 11:02'!verificaUsuarioYPrestamoAct: unUsuario |prestamoAct mismoUsu |mismoUsu:= usuario mismoDni: unUsuario.prestamoAct := (fechaEntrega isNil) & mismoUsu.^prestamoAct. ! !!Prestamo methodsFor: 'aplicacion' stamp: 'Anonymous 6/24/2024 13:08'!verificaUsuarioAtrasado|atrasado|atrasado:= ((Date today) > fechaLimite ) & (fechaEntrega isNil).^atrasado.! !!Prestamo methodsFor: 'observadores' stamp: 'Anonymous 7/26/2024 00:41'!getColLibrosPrest^colLibros.! !!Prestamo methodsFor: 'observadores' stamp: 'Anonymous 6/24/2024 13:05'!getUsuario^usuario.! !!Prestamo methodsFor: 'observadores' stamp: 'Anonymous 7/31/2024 12:21'!getFechaPrestamo^fechaPrestamo.! !!Prestamo methodsFor: 'observadores' stamp: 'Anonymous 7/31/2024 12:26'!getFechaEntrega^fechaEntrega.! !!Prestamo methodsFor: 'observadores' stamp: 'Anonymous 7/31/2024 12:28'!getFechaLimite^fechaLimite.! !!Prestamo methodsFor: 'inicializador' stamp: 'Anonymous 8/2/2024 12:14'!inicializaPrestamo: tiempoPrest yUsuario: unUsuario yColLibros:colLibrosPrestfechaPrestamo := Date today.fechaLimite:= (Date today) addDays: tiempoPrest.usuario := unUsuario.colLibros :=colLibrosPrest .colLibros do:[ :libro| libro libroPrestado].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Prestamo class	instanceVariableNames: ''!!Prestamo class methodsFor: 'constructor' stamp: 'Anonymous 8/2/2024 12:11'!crearPrestConTiempo: tiempoPrest yUsuario: unUsuario yColLibros:colLibrosPrest|unPrestamo|unPrestamo := self new.unPrestamo inicializaPrestamo: tiempoPrest yUsuario: unUsuario yColLibros:colLibrosPrest.^unPrestamo.! !AccesoDeInicio subclass: #RegistroDeUsuario	instanceVariableNames: 'dniU claveU nombreU apellidoU tipoU usuario'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!RegistroDeUsuario methodsFor: 'inicializador' stamp: 'Anonymous 8/9/2024 15:48'!initialize super initialize.self agregarRectanguloTitulo: 'REGISTRO DE USUARIO'.self agregarTextoIndicador: '  Por favor, complete los campos con su información   personal para registrarse:'.self agregarCamposRegistroUsu.self botonEntrada: 'Registrarse'.bEntrada color: (Color r:0 g: 0.65 b:0).bEntrada mouseAction:[ self registrarUsuario.	                      usuario	                      ifNotNil:[		                   		                     sistema addDependent: self.		                 sistema agregarUsuario:usuario.	                 			              aviso := AvisoVisual  crearAvisoBienOk: 'REGISTRO COMPLETADO '.		                 self addMorph: aviso.		                aviso getBotonOk mouseAction:[ self delete. ]. 		             		          		].		].! !!RegistroDeUsuario methodsFor: 'accionBoton' stamp: 'Anonymous 8/9/2024 13:03'!registrarUsuario|verifica|usuario:=nil.( dniU  campoLleno & claveU campoLleno  & nombreU campoLleno & apellidoU  campoLleno & tipoU campoLleno) ifTrue:[ "verifica si el usuario se encuentra en el sistema"	 verifica:=sistema verificaDniUsu: (dniU getTexto) .		verifica   ifTrue: [ aviso := AvisoVisual  crearAvisoAlertaOk:'El USUARIO ya se encuentra registrado. '.	       dniU  borrarTexto.     	        ]          		ifFalse:[ 		 (tipoU getTexto)='normal' 		 ifTrue:[ 			usuario:= Usuario crearDni: (dniU getTexto) conClave:(claveU getTexto)  conNombre:(nombreU getTexto)  conApellido:(apellidoU getTexto). 			 ]		ifFalse:[			(tipoU getTexto)='plus'			ifTrue:[ 			usuario:= UsuarioPlus crearDni: (dniU getTexto) conClave:(claveU getTexto)  conNombre:(nombreU getTexto)  conApellido:(apellidoU getTexto).				]			ifFalse:[aviso:= AvisoVisual  crearAvisoMalOk: 'El tipo de usuario es INCORRECTO , ingrese normal o plus'.		           tipoU borrarTexto.			].			].		     			].		]		ifFalse:[ aviso:=AvisoVisual  crearAvisoAlertaOk:  'POR FAVOR, complete todos los campos del Registro de Usuario.'.	  	  ]. avisoifNotNil:[self addMorph: aviso.aviso getBotonOk mouseAction: [ aviso delete. ].		 ]. 	         ! !!RegistroDeUsuario methodsFor: 'grafica' stamp: 'Anonymous 7/7/2024 01:14'!agregarCamposRegistroUsu"DNI usuario"dniU:= CamposDeTexto crearCampoTexto.dniU agregarTextoSugerencia: 'Ingrese el DNI para el usuario';     position: menu position + (90@200). menu  addMorph: dniU. "contraseña"claveU:= CamposDeTexto crearCampoTexto.claveU  agregarTextoSugerencia: 'Ingrese la contraseña para el usuario';     position: menu position + (90@270). menu  addMorph: claveU.  "nombre"nombreU:= CamposDeTexto crearCampoTexto.nombreU agregarTextoSugerencia: 'Ingrese el nombre para el usuario';     position: menu position + (90@340). menu  addMorph: nombreU. "apellido"apellidoU:= CamposDeTexto crearCampoTexto.apellidoU agregarTextoSugerencia: 'Ingrese el apellido para el usuario';     position: menu position + (90@410). menu  addMorph: apellidoU. "tipo de usuario"tipoU:= CamposDeTexto crearCampoTexto.tipoU agregarTextoSugerencia: 'Tipo de usuario: normal o plus';     position: menu position + (90@480). menu  addMorph: tipoU. ! !Morph subclass: #SeleccionaBotonAdmin	instanceVariableNames: 'sistema marco separador contenedorBoton bGuardar aviso bSalir indicador b eligeBiblio'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!SeleccionaBotonAdmin methodsFor: 'inicializador' stamp: 'Anonymous 7/23/2024 10:15'!agregarSistema: unSistemasistema:=  unSistema.! !!SeleccionaBotonAdmin methodsFor: 'inicializador' stamp: 'Anonymous 8/9/2024 12:48'!initialize super initialize.self extent: 1366@768;      color: (Color fromHexString: '#D4C3CA').self agregarMarcoSuperior.self botonGuardar.self botonCancelar.bSalir mouseAction: [ self delete. ].! !!SeleccionaBotonAdmin methodsFor: 'boton' stamp: 'Anonymous 7/24/2024 20:52'!botonCancelar|texto  origen|origen:=self innerBounds origin.bSalir  := BotonAccion new. texto:= bSalir   editColor: Color white  yEtiquetaBold:'Cancelar' yTamañoFuente:16. bSalir    position: origen + (800@630);           label: texto;               extent: 200@50;           borderWidth: 5;           borderColor: Color lightGray;           color: (Color fromHexString: '#ff0000');           useRoundedCorners.        self addMorph: bSalir.! !!SeleccionaBotonAdmin methodsFor: 'boton' stamp: 'Anonymous 7/11/2024 17:25'!botonGuardar|texto origen|origen:= self innerBounds origin.bGuardar  := BotonAccion new. texto:= bGuardar   editColor: Color white   yEtiquetaBold:'Guardar' yTamañoFuente:16. bGuardar  position:  origen +  (1100@630);           label: texto;               extent: 200@50;           borderColor: (Color lightGray );           borderWidth: 5;           color: (Color r:0 g: 0.65 b:0);           useRoundedCorners.        self addMorph: bGuardar.! !!SeleccionaBotonAdmin methodsFor: 'boton' stamp: 'Anonymous 7/31/2024 23:19'!botonOperador:unTexto|texto bOperador|bOperador   := BotonAccion new.texto := bOperador    editColor: Color white yEtiquetaBold: unTexto  yTamañoFuente:16.bOperador             label: texto;               extent: 200@50;           borderColor:(Color white );           borderWidth: 5;           color: (Color black);           position: (contenedorBoton  bounds center) - (bOperador extent // 2);           useRoundedCorners.                 self  addMorph: bOperador .^bOperador.! !!SeleccionaBotonAdmin methodsFor: 'grafica' stamp: 'Anonymous 8/1/2024 01:02'!agregarCuadroBotonEnPosicion:unaPos |origen|origen:=self innerBounds origin.contenedorBoton := Morph new.contenedorBoton  position: origen + (unaPos);       extent: 320@75;       color: (Color fromHexString: '#FF8C00');       useRoundedCorners.self addMorph: contenedorBoton .! !!SeleccionaBotonAdmin methodsFor: 'grafica' stamp: 'Anonymous 7/15/2024 15:23'!agregarTitulo: unTitulo|titulo|titulo:= StringMorph new.titulo color: (Color white);       contents: unTitulo;       font: (LogicalFont familyName:       StandardFonts defaultFont familyName pointSize: 30);        emphasis: TextEmphasis bold;       position: (marco bounds center) - (titulo extent // 2).marco addMorph: titulo.! !!SeleccionaBotonAdmin methodsFor: 'grafica' stamp: 'Anonymous 7/31/2024 23:59'!agregarSelecBiblio:unaColBiblio"la coleccion es la colBibliotecas de Sistema"eligeBiblio:=Selector crearSeleccionadorBiblio: unaColBiblio yTexto:'Seleccione una biblioteca' .eligeBiblio position:self position + (70@220).self addMorph: eligeBiblio.! !!SeleccionaBotonAdmin methodsFor: 'grafica' stamp: 'Anonymous 7/11/2024 10:53'!agregarSeparadorCampoEnPos:unaPos yTam:unTam| origen|origen:=self innerBounds origin.separador:= BorderedMorph new.separador position:  origen + (unaPos);                extent: unTam;                   color: (Color white alpha: 0);                   borderColor: Color black;                   borderWidth: 2;                   useRoundedCorners.self addMorph: separador.! !!SeleccionaBotonAdmin methodsFor: 'grafica' stamp: 'Anonymous 7/10/2024 12:39'!agregarMarcoSuperior|origen|origen:=self innerBounds origin.marco:=BorderedMorph new.marco  position: origen;       extent: 1366@120;       color: (Color fromHexString: '#292c35');       borderWidth: 4;       borderColor: Color black.self addMorph: marco.! !!SeleccionaBotonAdmin methodsFor: 'grafica' stamp: 'Anonymous 7/15/2024 15:26'!agregarIndicadorindicador:= StringMorph new.  indicador color: (Color black);          contents: 'Complete los campos con la información requerida: ';          emphasis: TextEmphasis bold;            backgroundColor: Color lightOrange;           position: (self innerBounds origin) + (50@140);          font:(LogicalFont				 familyName: StandardFonts defaultFont familyName				 pointSize: 15).				self addMorph: indicador.				! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SeleccionaBotonAdmin class	instanceVariableNames: ''!!SeleccionaBotonAdmin class methodsFor: 'constructor' stamp: 'Anonymous 8/4/2024 22:55'!crearInterfazOpcionAdmin:unSistema|menuAdmin|menuAdmin:=self new.menuAdmin agregarSistema:unSistema.^menuAdmin.! !!SeleccionaBotonAdmin class methodsFor: 'constructor' stamp: 'Anonymous 8/4/2024 22:55'!crearInterfazAdminConSelecBiblio:unSistema|menuAdmin|menuAdmin:=self new.menuAdmin agregarSistema:unSistema.menuAdmin agregarSelecBiblio: unSistema getColBibliotecas.^menuAdmin.! !SeleccionaBotonAdmin subclass: #AgregarBiblioteca	instanceVariableNames: 'idB direccionB nombreB telContactoB tiempoPrestB nombreRepB bAgregarBiblioteca'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!AgregarBiblioteca methodsFor: 'grafica' stamp: 'Anonymous 8/5/2024 10:39'!agregarCamposBibliotecaself agregarSeparadorCampoEnPos: 30@180 yTam: 370@500."Id"idB:=CamposDeTexto crearCampoTexto.idB agregarTextoSugerencia: 'Ingrese un identificador';     position:  separador position + (25@20). self  addMorph: idB. "Nombre"nombreB :=CamposDeTexto crearCampoTexto.nombreB agregarTextoSugerencia: 'Ingrese un nombre';     position: separador position + (25@90). self  addMorph: nombreB. "Direccion"direccionB :=CamposDeTexto crearCampoTexto.direccionB agregarTextoSugerencia: 'Ingrese una dirección';     position: separador position + (25@160). self  addMorph: direccionB."Telefono de contacto"telContactoB  :=CamposDeTexto crearCampoTexto.telContactoB  agregarTextoSugerencia: 'Ingrese un telefono de contacto';     position: separador position + (25@230). self  addMorph: telContactoB.  "Nombre del Representante"nombreRepB  :=CamposDeTexto crearCampoTexto.nombreRepB agregarTextoSugerencia: 'Ingrese el nombre del representante';     position: separador position + (25@300). self  addMorph: nombreRepB. "Tiempo prestado de lo/s libro/s"tiempoPrestB  :=CamposDeTexto crearCampoTexto.tiempoPrestB agregarTextoSugerencia: 'Ingrese el tiempo de prestámo';     position: separador position + (25@370). self  addMorph: tiempoPrestB . ! !!AgregarBiblioteca methodsFor: 'accionBoton' stamp: 'Anonymous 8/7/2024 08:20'!agregarLibroDeBiblio"Este método abre una ventana para que el administrador pueda agregar libro/s de la biblioteca que creo"  |agregaLibro|  (b isNotNil)  ifTrue:[idB borrarTexto. direccionB borrarTexto. nombreB borrarTexto. telContactoB borrarTexto. tiempoPrestB borrarTexto. nombreRepB borrarTexto.	         aviso:= AvisoVisual crearAvisoAlertaOk:'Ahora deberá agregar 1 libro o más para la biblioteca: ', b getNombre.	        bAgregarBiblioteca show.           agregaLibro:=AgregarLibro crearInterfazAgregarBiblioLibro: b ySistema:sistema.          self addMorph: agregaLibro. ]  ifFalse:[ aviso  := AvisoVisual  crearAvisoAlertaOk: 'Por favor, agregue una biblioteca. '.	].   self addMorph: aviso.	aviso getBotonOk mouseAction: [ aviso delete.  ].  ! !!AgregarBiblioteca methodsFor: 'accionBoton' stamp: 'Anonymous 8/5/2024 10:56'!registraBiblioteca"Este método crea una bibliboteca según los datos de los campos"| verifica aux |( idB campoLleno  & nombreB campoLleno  & nombreRepB campoLleno & telContactoB campoLleno & direccionB campoLleno & tiempoPrestB campoLleno  ) ifTrue:[  verifica:=sistema verificaBiblioId: (idB getTexto).	"verifica que el id este en el sistema"	verificaifTrue: [aviso:= AvisoVisual  crearAvisoMalOk:'IDENTIFICADOR OCUPADO, DEBE usar otro. '.	      idB borrarTexto. ]          ifFalse:[  aux:= tiempoPrestB getTexto.	"verifica que el tiempo del prestámo del libro sea un número"	    verifica:=   aux allSatisfy: [ :char | char isDigit ]. 			verifica  						ifFalse:[aviso:= AvisoVisual  crearAvisoMalOk: 'El valor del tiempo de prestámo es INCORRECTO. POR FAVOR, ingrese un                             valor numérico. '. tiempoPrestB borrarTexto. ]						ifTrue:[ 				"Si todos los campos de la Biblioteca estan llenos, se crea la Biblioteca"					 b := Biblioteca crearId: idB getTexto  yDireccion: direccionB getTexto 					  yNombre: nombreB getTexto   yTel: telContactoB getTexto  					 yTiempoPrestado: (tiempoPrestB getTexto)asInteger     yNombreRepresentante: nombreRepB getTexto .													aviso:= AvisoVisual  crearAvisoBienOk: 'La Biblioteca ha sido AGREGADA.'.									 	bAgregarBiblioteca hide.       			].		].	]	ifFalse:[ aviso:= AvisoVisual  crearAvisoAlertaOk:  'POR FAVOR, complete todos los campos de la Biblioteca. '.	               	 	       ]. 	 self addMorph: aviso.   aviso getBotonOk  mouseAction: [ aviso delete].	         ! !!AgregarBiblioteca methodsFor: 'inicializador' stamp: 'Anonymous 8/9/2024 12:49'!initialize 		|bAgregarLibro|super initialize.self agregarCamposBiblioteca.self agregarTitulo: 'AGREGAR BIBLIOTECA'.self agregarIndicador.self agregarCuadroBotonEnPosicion: 55@590 .bAgregarBiblioteca:= self botonOperador: 'Agregar Biblioteca'.self agregarCuadroBotonEnPosicion: 1030@620 .bAgregarLibro:= self botonOperador: 'Agregar Libro/s'.bAgregarBiblioteca mouseAction: [ self registraBiblioteca.  ].bAgregarLibro mouseAction:[self agregarLibroDeBiblio. ].! !SeleccionaBotonAdmin subclass: #AgregarLibro	instanceVariableNames: 'colAutores nombreL isbnL editorialL añoEdiccionL tipoL dniAu nombreAu apellidoAu colLibros opcion'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!AgregarLibro methodsFor: 'inicializador' stamp: 'Anonymous 8/9/2024 12:49'!initialize |bConfirmarBiblio  bAgregarLibro bAgregarAutor guardo |super initialize.self agregarTitulo: 'AGREGAR LIBRO/S'.self agregarIndicador.self agregarCamposDeLibro.self agregarCuadroBotonEnPosicion: 70@300.bConfirmarBiblio:= self botonOperador: 'Confirmar Biblioteca'.   self agregarCuadroBotonEnPosicion: 872.5@500 .bAgregarLibro := self botonOperador: 'Agregar Libro'. bAgregarAutor := self botonOperador: 'Agregar Autor'.bAgregarAutor position: (separador  position) + (72.5@230).bConfirmarBiblio mouseAction: [self botonConfirmarBiblio: bConfirmarBiblio.].	                          bAgregarLibro mouseAction:[self registraLibro.].bAgregarAutor mouseAction:[self registraAutor.  ].bGuardar mouseAction:[guardo :=self guardaDatos.	                    guardo	                    ifTrue:[bConfirmarBiblio show.].].! !!AgregarLibro methodsFor: 'inicializador' stamp: 'Anonymous 8/4/2024 21:36'!agregarBiblioteca:unaBiblio b:=unaBiblio.! !!AgregarLibro methodsFor: 'inicializador' stamp: 'Anonymous 8/7/2024 12:41'!agregarOpcion:unaOpcionopcion:= unaOpcion. ! !!AgregarLibro methodsFor: 'grafica' stamp: 'Anonymous 8/4/2024 21:45'!agregarNombreBiblio: unaBiblio|cartel |cartel:= StringMorph new.cartel color: (Color black);       backgroundColor: Color orange;       contents: unaBiblio getNombre;       font: (LogicalFont familyName:       StandardFonts defaultFont familyName pointSize: 20);        emphasis: TextEmphasis bold;       position: self position + (70@300).self addMorph: cartel.! !!AgregarLibro methodsFor: 'grafica' stamp: 'Anonymous 8/6/2024 12:20'!agregarMensajeTipo|texto|texto:= TextMorph new.		texto contents: 'Tipo: impreso --> 1',String cr, 'Tipo: electrónico --> 2',String cr,'Tipo: audio -->3';      lock;      position: separador position + (20@340);      color: Color black.self addMorph: texto.! !!AgregarLibro methodsFor: 'grafica' stamp: 'Anonymous 8/4/2024 21:42'!agregarPantallaOculta"Es un método que consiste en tapar el boton confirmar biblioteca, este se agrega cuando se crea una biblioteca y debe agregar libo/s de esta biblioteca."|pantalla|pantalla:= Morph new.pantalla color: (Color fromHexString: '#D4C3CA');         extent: 320@75;         position: self position + (70@300).self addMorph: pantalla.! !!AgregarLibro methodsFor: 'grafica' stamp: 'Anonymous 8/6/2024 12:17'!agregarCamposDeLibrocolLibros := OrderedCollection new.colAutores:=OrderedCollection new.self agregarSeparadorCampoEnPos: 460@180 yTam: 770@420."ISBN del libro"isbnL  :=CamposDeTexto crearCampoTexto.isbnL   agregarTextoSugerencia: 'Ingrese el ISBN del libro ';     position: separador position + (43.3@20). self  addMorph: isbnL  ."Nombre del libro"nombreL  :=CamposDeTexto crearCampoTexto.nombreL   agregarTextoSugerencia: 'Ingrese el nombre del libro ';     position: separador position + (43.3@90). self  addMorph: nombreL . "Editorial del libro"editorialL   :=CamposDeTexto crearCampoTexto.editorialL   agregarTextoSugerencia: 'Ingrese la editorial del libro ';     position: separador position + (43.3@160). self  addMorph: editorialL  ."Año de ediccion"añoEdiccionL   :=CamposDeTexto crearCampoTexto.añoEdiccionL   agregarTextoSugerencia: 'Ingrese el año de edicción del libro ';     position: separador position + (43.3@230). self  addMorph: añoEdiccionL  . " tipo del libro"tipoL:= CamposDeTexto crearCampoTexto.tipoL agregarTextoSugerencia: 'Ingrese el tipo con un número';position: separador position + (43.3@300).self addMorph: tipoL.		 self agregarMensajeTipo.self agregarSeparadorCampoEnPos: 860@180 yTam: 370@300."Dni del autor"dniAu    :=CamposDeTexto crearCampoTexto.dniAu   agregarTextoSugerencia: 'Ingrese el DNI del autor ';position: separador  position + (12.5@20). self  addMorph: dniAu . "Nombre del autor"nombreAu:= CamposDeTexto crearCampoTexto.nombreAu agregarTextoSugerencia: 'Ingrese el nombre del autor ';position: separador  position + (12.5@90). self  addMorph: nombreAu . "Apellido del autor"apellidoAu   :=CamposDeTexto crearCampoTexto.apellidoAu   agregarTextoSugerencia: 'Ingrese el apellido del autor ';position: separador position + (12.5@160). self  addMorph: apellidoAu .! !!AgregarLibro methodsFor: 'accionBoton' stamp: 'Anonymous 8/11/2024 22:56'!botonConfirmarBiblio:bConfirmarBiblio  b:=eligeBiblio designaElemento.bifNotNil:[  bConfirmarBiblio hide.	eligeBiblio lock.	aviso:=AvisoVisual crearAvisoBienOk: 'Se ha confirmado la biblioteca: ',(b getNombre)asString.	]ifNil:[ aviso:=AvisoVisual crearAvisoAlertaOk:'Por favor, seleccione una biblioteca de su interés para continuar.'.	   	].  self addMorph: aviso.   aviso getBotonOk mouseAction:[aviso delete.].! !!AgregarLibro methodsFor: 'accionBoton' stamp: 'Anonymous 8/7/2024 12:53'!guardaDatos"Este método guarda  el/los libro/s de la biblioteca seleccionada  y los autores en el sistema "|guardo autores|guardo:=false.  (b isNotNil & colLibros isNotEmpty )  ifTrue:[isbnL borrarTexto. nombreL  borrarTexto. editorialL  borrarTexto. añoEdiccionL  borrarTexto. tipoL borrarTexto.  	       aviso :=AvisoVisual  crearAvisoBienOk:'La información ha sido GUARDADA. '.	       sistema addDependent: self.				  b addDependent: self.			 (opcion = 1)			 ifTrue:[   			  sistema agregarBiblioteca: b.  			]. 			    					  colLibros do:[:libro|  b agregarLibro:libro.  				              autores:=libro getColAutores.				                        				                          autores do: [:a| sistema verificaYGuardaAutor: a.].]. 	     	       guardo:=true.  	               self addMorph:aviso.	              aviso getBotonOk mouseAction: [ self delete.  ].               ]ifFalse:[aviso  := AvisoVisual  crearAvisoAlertaOk: 'NO se guardó nada, por falta de datos. '.	 self addMorph:aviso.	aviso getBotonOk mouseAction: [ aviso delete.  ].  	 ].^guardo.! !!AgregarLibro methodsFor: 'accionBoton' stamp: 'Anonymous 8/7/2024 10:21'!registraAutor|autor verifica|(dniAu campoLleno & nombreAu campoLleno & apellidoAu campoLleno )ifTrue:[	   verifica:= colAutores anySatisfy:[:a| a getDni = (dniAu getTexto)].	verifica	 ifFalse:[		autor:= Autor crearDni: (dniAu getTexto) conNombre: (nombreAu getTexto) conApellido: (apellidoAu getTexto). 		  	  colAutores add: autor. 	  dniAu borrarTexto. nombreAu borrarTexto. apellidoAu borrarTexto.	  aviso:= AvisoVisual  crearAvisoBienOk: 'El AUTOR ha sido AGREGADO. Si quiere,  puede agregar otro autor.'. 	]ifTrue:[aviso:=AvisoVisual crearAvisoMalOk: 'DNI OCUPADO, por favor ingrese otro dni.'. dniAu borrarTexto.].		                                          ]     		 	   ifFalse:[	                    aviso:= AvisoVisual crearAvisoAlertaOk: 'POR FAVOR, COMPLETE todos los campos del autor. '.		         		                 ].	            self addMorph: aviso.	             aviso getBotonOk mouseAction:[ aviso delete].   		! !!AgregarLibro methodsFor: 'accionBoton' stamp: 'Anonymous 8/7/2024 12:21'!registraLibro| verifica aux   libroAux verificaIsbn tipo|libroAux:=nil.( isbnL campoLleno  & editorialL  campoLleno  & añoEdiccionL  campoLleno & nombreL  campoLleno &  tipoL campoLleno & colAutores notEmpty & b notNil ) ifTrue:[ "Verifica  que el ISBN del libro se encuentre en la Biblioteca  "			verificaIsbn:=false.		(colLibros isNotEmpty )		ifTrue:[			"Verifica  que el ISBN del libro se encuentre en la Biblioteca  "verificaIsbn:= (colLibros anySatisfy: [:l| l getISBN = isbnL getTexto.]).].verifica:= (b mismoISBN: (isbnL  getTexto)) | verificaIsbn  . verifica ifTrue:[	   	    aviso:= AvisoVisual  crearAvisoMalOk:'ISBN OCUPADO, DEBE usar otro. '.	      isbnL  borrarTexto.	      	      ]ifFalse:[ "Verifica que el año de edicción sea un numero"          aux:= (añoEdiccionL getTexto).	       verifica:=   aux allSatisfy: [ :char | char isDigit ].	(verifica )        ifFalse:[ 		aviso:= AvisoVisual crearAvisoMalOk:  'POR FAVOR, ingrese un valor numérico para el año de edicción. '.	               	                       añoEdiccionL borrarTexto.           	   	]ifTrue:[	tipo:= tipoL getTexto.	libroAux:=self creaLibro:tipo.libroAux ifNotNil:[	aviso:= AvisoVisual  crearAvisoBienOk: 'El LIBRO ha sido AGREGADO. Si quiere , puede agregar otro libro.'.	colLibros add: libroAux.	"Borramos los datos del libro agregado"		nombreL borrarTexto . isbnL borrarTexto. editorialL borrarTexto . añoEdiccionL borrarTexto . tipoL borrarTexto.	"Borramos la colAutores para que pueda agregar otro libro" colAutores:=OrderedCollection new.	]ifNil:[aviso:= AvisoVisual  crearAvisoMalOk: 'El tipo de Libro es INCORRECTO. POR FAVOR, ingrese el número según el tipo. '. 	        tipoL borrarTexto.].].].]"Esta parte la hago como para tener un orden de que primero se debe agregar la biblioteca y despues el libro"ifFalse:[b ifNotNil:[         aviso := AvisoVisual  crearAvisoAlertaOk:'POR FAVOR, complete todos los campos para el libro. '.	               	             	    	    ]ifNil:[aviso := AvisoVisual  crearAvisoAlertaOk:'POR FAVOR, seleccione una biblioteca. '.	               	               	     ].].self addMorph: aviso.	  aviso getBotonOk  mouseAction: [ aviso delete.	].       ! !!AgregarLibro methodsFor: 'accionBoton' stamp: 'Anonymous 8/7/2024 12:21'!creaLibro:tipo|libroAux|libroAux:=nil.	"Tipo Impreso"			(tipo = '1')	ifTrue:[	libroAux:= LibroImpreso crearISBN: (isbnL getTexto) yNombre: (nombreL getTexto)  yEditorial: (editorialL getTexto)   yAñoEdi: (añoEdiccionL getTexto)asInteger   yAutores: colAutores . ]."Tipo electrónico"(tipo = '2')	ifTrue:[	libroAux:= LibroElectronico  crearISBN: (isbnL getTexto) yNombre: (nombreL getTexto)  yEditorial: (editorialL getTexto)   yAñoEdi: (añoEdiccionL getTexto)asInteger   yAutores: colAutores . 	]."Tipo Audio"(tipo = '3')	ifTrue:[	libroAux:= AudioLibro  crearISBN: (isbnL getTexto) yNombre: (nombreL getTexto)  yEditorial: (editorialL getTexto)   yAñoEdi: (añoEdiccionL getTexto)asInteger   yAutores: colAutores . ].^libroAux.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AgregarLibro class	instanceVariableNames: ''!!AgregarLibro class methodsFor: 'constructor' stamp: 'Anonymous 8/7/2024 12:41'!crearInterfazAgregarBiblioLibro:unaBiblio ySistema:unSistema|agregaLibro| agregaLibro:=self crearInterfazOpcionAdmin: unSistema. agregaLibro agregarBiblioteca:unaBiblio. agregaLibro agregarPantallaOculta.agregaLibro agregarNombreBiblio: unaBiblio.agregaLibro agregarOpcion:1.^agregaLibro.! !SeleccionaBotonAdmin subclass: #QuitarLibro	instanceVariableNames: 'colLibros eligeLibro bConfirmarL bConfirmarB'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!QuitarLibro methodsFor: 'grafica' stamp: 'Anonymous 8/5/2024 10:29'!agregaSelecLibro:unaColLibroeligeLibro:=Selector crearSeleccionadorLibro: unaColLibro yTexto:'Seleccione un libro' .eligeLibro position:self position + (500@220).self addMorph: eligeLibro.           ! !!QuitarLibro methodsFor: 'accionBoton' stamp: 'Anonymous 8/11/2024 23:14'!sacarLibro((b isNotNil) & (colLibros isNotEmpty))	                          ifTrue:[ 		                       b addDependent: self.	                        colLibros do:[:l|  b quitarLibro: l].	                        	                        b:=nil.	                          colLibros:=OrderedCollection new.	                          aviso:=AvisoVisual crearAvisoBienOk: 'Se quito/quitaron el/los libro/s de la biblioteca.' .	                          bConfirmarB show. 	                          eligeBiblio unlock.	                          eligeBiblio reseteaTextoSugerencia:'Seleccione una biblioteca'.	                          self removeMorph: eligeLibro.	                          self removeMorph: contenedorBoton.  	                          self removeMorph: bConfirmarL.                        	                           ]                            ifFalse:[	                    	                       aviso:= AvisoVisual crearAvisoAlertaOk: 'Por favor, seleccione el/los boton/es.'.		                        	].self addMorph: aviso.aviso getBotonOk mouseAction: [ aviso delete ].! !!QuitarLibro methodsFor: 'accionBoton' stamp: 'Anonymous 8/12/2024 00:14'!confirmarLibro| libroPrestado  libroSelec|    	      b 	      ifNotNil:[		    		    libroSelec:= eligeLibro designaElemento.	     	       libroSelec	       ifNil:[ aviso:=AvisoVisual crearAvisoAlertaOk: 'Por favor, seleccione un libro.'. ]	  ifNotNil: [ libroPrestado:=libroSelec getPrestado | (colLibros includes: libroSelec).		eligeLibro reseteaTextoSugerencia:'Seleccione un libro'.		libroPrestado 		ifFalse:[ colLibros add: libroSelec.			      			     		aviso:= AvisoVisual crearAvisoBienOk: 'El libro ha sido CONFIRMADO. Si quiere puede seguir seleccionando algún libro para luego quitarlo/s de la biblioteca.'. 	      ]      ifTrue:[aviso:= AvisoVisual crearAvisoMalOk: 'El libro se encuentra PRESTADO.'.].	      ].   ]  ifNil:[ aviso:= AvisoVisual crearAvisoAlertaOk: 'Por favor, seleccione una biblioteca para continuar. '.].   self addMorph: aviso.   aviso getBotonOk mouseAction: [ aviso delete ].! !!QuitarLibro methodsFor: 'accionBoton' stamp: 'Anonymous 8/10/2024 12:39'!confirmarBibliob:=eligeBiblio designaElemento.bifNotNil:[ 	        	      	       self agregaSelecLibro:( b getColLibros).	         bConfirmarB hide.	         eligeBiblio lock.	   	        self agregarCuadroBotonEnPosicion: 500@300.        bConfirmarL  := self botonOperador: 'Confirmar Libro'.       bConfirmarL mouseAction:[self confirmarLibro.].	aviso:=AvisoVisual crearAvisoBienOk: 'Se ha confirmado la biblioteca: ',(b getNombre)asString.	]ifNil:[ aviso:=AvisoVisual crearAvisoAlertaOk:'Por favor, seleccione una biblioteca de su interés para continuar.'.	   	].  self addMorph: aviso.   aviso getBotonOk mouseAction:[aviso delete.].! !!QuitarLibro methodsFor: 'inicializador' stamp: 'Anonymous 8/10/2024 12:29'!initialize | bQuitarLibro |super initialize.self agregarTitulo: 'QUITAR LIBRO/S'. colLibros:=OrderedCollection new.	     self agregarCuadroBotonEnPosicion: 70@300.bConfirmarB:= self botonOperador: 'Confirmar Biblioteca'.    self agregarCuadroBotonEnPosicion: 1030@620 .bQuitarLibro := self botonOperador: 'Quitar Libro/s'.bQuitarLibro mouseAction: [self sacarLibro.].bConfirmarB mouseAction: [ self confirmarBiblio.	                           ].! !BorderedMorph subclass: #SeleccionaBotonUsuario	instanceVariableNames: 'marcoSup bCancelar cuadro usuario aviso eligeBiblio sistema bConfirmarBiblio bCancelarBiblio'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!SeleccionaBotonUsuario methodsFor: 'inicializador' stamp: 'Anonymous 7/17/2024 17:48'!agregarUsuario:unUsuariousuario:=unUsuario.! !!SeleccionaBotonUsuario methodsFor: 'inicializador' stamp: 'Anonymous 7/30/2024 16:24'!initialize super initialize.self color: ( Color fromHexString: '#C0C0C0');      extent: 1366@768."Logo"self agregarLogo.self botonCancelar.bCancelar mouseAction:[self delete.].! !!SeleccionaBotonUsuario methodsFor: 'boton' stamp: 'Anonymous 7/29/2024 13:23'!botonCancelar|texto |bCancelar   := BotonAccion new. texto:= bCancelar   editColor: Color white yEtiquetaBold:'Cancelar' yTamañoFuente:15.bCancelar  position: (self position) +(800@630) ;           label: texto;               extent: 200@50;           borderColor: (Color lightGray );           borderWidth: 5;           color: (Color fromHexString: '#ff0000');           useRoundedCorners.self addMorph: bCancelar   .! !!SeleccionaBotonUsuario methodsFor: 'boton' stamp: 'Anonymous 7/29/2024 12:34'!botonOperador:unTexto|texto bOperador|bOperador   := BotonAccion new.texto := bOperador    editColor: Color white yEtiquetaBold: unTexto  yTamañoFuente:16.bOperador             label: texto;               extent: 200@50;           position: (cuadro bounds center) - (bOperador  extent // 2);           borderColor:(Color fromHexString: '#AC9362');           borderWidth: 5;           color: (Color fromHexString: '#410200');           useRoundedCorners.                 cuadro  addMorph: bOperador .^bOperador.! !!SeleccionaBotonUsuario methodsFor: 'grafica' stamp: 'Anonymous 7/28/2024 12:54'!agregarSelecBiblio:unaColBiblio"la coleccion es la colBibliotecas de Sistema"eligeBiblio:=Selector crearSeleccionadorBiblio: unaColBiblio yTexto:'Seleccione una biblioteca' .eligeBiblio position:self position + (100@320).self addMorph: eligeBiblio.! !!SeleccionaBotonUsuario methodsFor: 'grafica' stamp: 'Anonymous 7/30/2024 11:28'!agregarBotonCancelarBiblioself agregarCuadroBotonEnPosicion: 100@500. bCancelarBiblio:=self botonOperador:'Cancelar Biblioteca'.! !!SeleccionaBotonUsuario methodsFor: 'grafica' stamp: 'Anonymous 7/24/2024 20:50'!agregarCuadSupDer| cuadDer|cuadDer:= Morph new.cuadDer position: marcoSup position  + (861@0);         extent: (300@200);         color: Color darkGray.marcoSup addMorph: cuadDer.	! !!SeleccionaBotonUsuario methodsFor: 'grafica' stamp: 'Anonymous 7/24/2024 22:00'!agregarTitulo:unTitulo |titulo |titulo:= StringMorph new.titulo contents: unTitulo;       color: Color black;              font:(LogicalFont				 familyName: StandardFonts defaultFont familyName				 pointSize: 40);			emphasis: TextEmphasis bold;			position: (marcoSup position) + (50@70).marcoSup addMorph: titulo.! !!SeleccionaBotonUsuario methodsFor: 'grafica' stamp: 'Anonymous 8/12/2024 18:17'!agregarTextoIndicador|textoInd|textoInd := StringMorph new.textoInd  color: Color black;          font: (LogicalFont				 familyName: StandardFonts defaultFont familyName				 pointSize: 17);				contents:'Seleccione una opción para ver su información:';				emphasis: TextEmphasis bold;				backgroundColor: (Color lightOrange);				position: self position + (400@230).self addMorph:textoInd.! !!SeleccionaBotonUsuario methodsFor: 'grafica' stamp: 'Anonymous 7/30/2024 11:28'!agregarBotonConfirmarBiblioself agregarCuadroBotonEnPosicion: 100@400. bConfirmarBiblio:=self botonOperador:'Confirmar Biblioteca'.! !!SeleccionaBotonUsuario methodsFor: 'grafica' stamp: 'Anonymous 7/17/2024 16:33'!agregarMarcoRectSupColor:unColor|origen|origen:= self innerBounds origin.marcoSup:= BorderedMorph new.marcoSup position: origen + (200@0);         extent: 1166@200;         borderColor: Color darkGray;         borderWidth: 9;      color: (unColor).self addMorph: marcoSup.self agregarCuadSupDer.! !!SeleccionaBotonUsuario methodsFor: 'grafica' stamp: 'Anonymous 7/27/2024 17:57'!agregarCuadroBotonEnPosicion:unaPoscuadro:= Morph new.cuadro position: self innerBounds origin + (unaPos);       extent: 320@75;       color: (Color fromHexString: '#6E2C00');       useRoundedCorners.self addMorph: cuadro.! !!SeleccionaBotonUsuario methodsFor: 'imagen' stamp: 'Anonymous 8/8/2024 21:14'!agregarLogo| imagen logo|logo:= Imagen crearFotografiaLogo.imagen:=logo getImagen.imagen position: self innerBounds origin .self addMorph:  imagen.      ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SeleccionaBotonUsuario class	instanceVariableNames: ''!!SeleccionaBotonUsuario class methodsFor: 'constructor' stamp: 'Anonymous 8/5/2024 17:27'!crearInterfazUsuario:unUsuario yCol: unaCol|prestUsuario|prestUsuario:=self new.prestUsuario agregarUsuario: unUsuario.prestUsuario agregarSelecBiblio: unaCol.^prestUsuario.! !SeleccionaBotonUsuario subclass: #AgregarBibliotecaDeInteres	instanceVariableNames: 'colBiblioInt bGuardar'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!AgregarBibliotecaDeInteres methodsFor: 'inicializador' stamp: 'Anonymous 7/30/2024 15:48'!initialize |bAgregarBI|super initialize.colBiblioInt:=OrderedCollection new.self agregarMarcoRectSupColor: Color orange.self agregarTitulo:'Agregar biblioteca de intéres'.self agregarCuadroBotonEnPosicion:100@400 .  bAgregarBI:=self botonOperador: 'Agregar Biblioteca'.self botonGuardar.bAgregarBI mouseAction: [ self agregarBiblioDeInteres. ].bGuardar mouseAction: [ self guardarDatos. ].! !!AgregarBibliotecaDeInteres methodsFor: 'boton' stamp: 'Anonymous 7/29/2024 13:23'!botonGuardar|texto |bGuardar  := BotonAccion new. texto:= bGuardar   editColor: Color white yEtiquetaBold:'Guardar' yTamañoFuente:15. bGuardar  position: (self position) +(1100@630) ;           label: texto;               extent: 200@50;           borderColor: (Color lightGray );           borderWidth: 5;           color: (Color r:0 g: 0.65 b:0);           useRoundedCorners.        self addMorph: bGuardar.! !!AgregarBibliotecaDeInteres methodsFor: 'accionBoton' stamp: 'Anonymous 8/10/2024 12:09'!guardarDatos(colBiblioInt notEmpty)ifTrue: [	     usuario addDependent: self.	     colBiblioInt do:[:b| usuario agregarBiblioInteres: b]. 	     aviso:= AvisoVisual crearAvisoBienOk: 'La colección de biblioteca/s ha sido GUARDADA.'.	     self addMorph: aviso.	     aviso getBotonOk mouseAction: [  self delete. ].		 ] ifFalse:[	 aviso:= AvisoVisual crearAvisoAlertaOk: 'No se guardó nada, por falta de datos. '.	     self addMorph: aviso.	     aviso getBotonOk mouseAction: [ aviso delete. ].		]. ! !!AgregarBibliotecaDeInteres methodsFor: 'accionBoton' stamp: 'Anonymous 8/12/2024 00:12'!agregarBiblioDeInteres|verificaCol hayBiblioInt biblio colBI |biblio:= eligeBiblio designaElemento.(biblio)ifNotNil:[ eligeBiblio reseteaTextoSugerencia:'Seleccione una biblioteca'.	         	"verifica si el usuario agregó , la biblioteca seleccionada  en la colección de biblioteca de interés"	colBI:=usuario getColBiblioInt. 	hayBiblioInt :=(colBI includes: biblio). (hayBiblioInt  not)ifTrue:[	 "verifica si el usuario agregó, la biblioteca seleccionada en la colección  de bibliotecas que se van agregando"	verificaCol:=(colBiblioInt includes:biblio).(verificaCol not)ifTrue:[		colBiblioInt add: biblio.	 aviso:=AvisoVisual crearAvisoBienOk:  'La biblioteca ha sido AGREGADA.'.        	 ]ifFalse:[	aviso:=AvisoVisual crearAvisoAlertaOk:'La biblioteca seleccionada ya se ha AGREGADO. POR FAVOR , seleccione una biblioteca.'.].]ifFalse:[	aviso:=AvisoVisual crearAvisoAlertaOk:'La biblioteca seleccionada ya se ha GUARDADO. POR FAVOR , seleccione otra biblioteca.'.].]	 ifNil:[	aviso:=AvisoVisual crearAvisoAlertaOk:'No ha seleccionando ninguna biblioteca. POR FAVOR , seleccione una biblioteca.'.].self addMorph: aviso.aviso getBotonOk mouseAction: [aviso delete].! !!AgregarBibliotecaDeInteres methodsFor: 'grafica' stamp: 'Anonymous 8/5/2024 17:17'!update:uusuario getColBiblioInt.! !SeleccionaBotonUsuario subclass: #DevolverPrestamo	instanceVariableNames: 'biblioElem'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!DevolverPrestamo methodsFor: 'inicializador' stamp: 'Anonymous 7/30/2024 15:53'!initialize |bDevolverPrest|super initialize.self agregarMarcoRectSupColor: (Color fromHexString: '#DAA520') .self agregarTitulo:'Devolución de préstamo'.self agregarBotonConfirmarBiblio.self agregarBotonCancelarBiblio.self agregarCuadroBotonEnPosicion: 1030@620.bDevolverPrest:=self botonOperador: 'Devolver Préstamo'.bConfirmarBiblio mouseAction: [ self botonConfirmarBiblio.].bCancelarBiblio mouseAction: [ self botonCancelarBiblio. ].bDevolverPrest mouseAction: [ self botonDevolverPrestamo. ].! !!DevolverPrestamo methodsFor: 'grafica' stamp: 'Anonymous 7/30/2024 11:14'!agregaNotaUsuarioPrestamo|texto nota rectanguloNota|rectanguloNota:=BorderedMorph new.rectanguloNota borderWidth: 4;          color:   (Color fromHexString: '#292c35');          borderColor: (Color fromHexString: '#DAA520');          extent: 500@150;            position: self position + (850@320).self addMorph: rectanguloNota.nota:=TextMorph new.texto:= 'Nota: Puede tener 1 préstamo por biblioteca.' asText.(usuario esPlus)ifTrue:[texto:='Nota: Puede tener como máximo 2 préstamos por biblioteca. En caso de que tenga los dos, se devolverá el primero que se creó.'asText].texto addAttribute: (TextEmphasis bold)from: 1 to: texto size.nota  contents: texto ;                    wrapFlag:true;    font:(LogicalFont familyName:       StandardFonts defaultFont familyName pointSize: 16);                extent:490@150;         position: rectanguloNota position + (5@5);         color: Color white;       lock.    rectanguloNota  addMorph: nota.    ! !!DevolverPrestamo methodsFor: 'accionBoton' stamp: 'Anonymous 8/12/2024 00:11'!botonCancelarBibliobiblioElem ifNotNil:[	 eligeBiblio unlock.	  bConfirmarBiblio unlock.	      	         bConfirmarBiblio  color: (Color fromHexString: '#410200').	eligeBiblio reseteaTextoSugerencia:'Seleccione una biblioteca'.	   aviso:=AvisoVisual crearAvisoAlertaOk: 'Se ha CANCELADO la biblioteca.'.	   biblioElem:=nil.		]ifNil:[ aviso:=AvisoVisual crearAvisoAlertaOk:'Por favor, seleccione una biblioteca de su interés para continuar.'.]. self addMorph: aviso.  aviso getBotonOk mouseAction:[aviso delete.].! !!DevolverPrestamo methodsFor: 'accionBoton' stamp: 'Anonymous 8/12/2024 00:11'!botonDevolverPrestamo|devuelto |biblioElem ifNotNil:[            biblioElem  addDependent: self.            devuelto:=biblioElem devolverPrestamo: usuario.            devuelto            ifTrue: [ aviso:= AvisoVisual crearAvisoBienOk: 'El préstamo se devolvió con éxito.'. 	           self addMorph: aviso.	            aviso getBotonOk mouseAction: [ self delete.].	 ]             ifFalse:[aviso:=AvisoVisual crearAvisoAlertaOk: 'No tiene préstamo/s en esta biblioteca. '.	            eligeBiblio reseteaTextoSugerencia:'Seleccione una biblioteca'.	             biblioElem:=nil. 	              bConfirmarBiblio unlock.	      	         bConfirmarBiblio  color: (Color fromHexString: '#410200').	        eligeBiblio unlock.	       	        self addMorph: aviso.	            aviso getBotonOk mouseAction:  [ aviso delete].       	].	]ifNil:[aviso:=AvisoVisual crearAvisoAlertaOk: 'Por favor, confirme la biblioteca de su interés para continuar.'.	self addMorph: aviso.	            aviso getBotonOk mouseAction:  [ aviso delete].	    ].! !!DevolverPrestamo methodsFor: 'accionBoton' stamp: 'Anonymous 8/11/2024 21:51'!botonConfirmarBibliobiblioElem:=eligeBiblio designaElemento.biblioElem ifNotNil:[	 eligeBiblio lock.	  bConfirmarBiblio lock.	"bloquea el boton"          	         bConfirmarBiblio  color: (Color r:0 g: 0.65 b:0).	aviso:=AvisoVisual crearAvisoBienOk: 'Se ha confirmado la biblioteca: ',(biblioElem getNombre)asString.	]ifNil:[ aviso:=AvisoVisual crearAvisoAlertaOk:'Por favor, seleccione una biblioteca de su interés para continuar.'.	   	].   self addMorph: aviso.   aviso getBotonOk mouseAction:[aviso delete.].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DevolverPrestamo class	instanceVariableNames: ''!!DevolverPrestamo class methodsFor: 'constructor' stamp: 'Anonymous 8/5/2024 17:37'!crearInterfazDPConUsuario:unUsuario |devuelto|devuelto:= self  crearInterfazUsuario:unUsuario yCol: (unUsuario getColBiblioInt).devuelto agregaNotaUsuarioPrestamo.^devuelto.! !SeleccionaBotonUsuario subclass: #InformacionBiblioteca	instanceVariableNames: 'biblio infoBiblio'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!InformacionBiblioteca methodsFor: 'inicializador' stamp: 'Anonymous 8/8/2024 11:43'!initializesuper initialize.self agregarTextoIndicador.self agregarMarcoRectSupColor: (Color fromHexString: '#00FF7F') .self agregarTitulo:'Información de biblioteca'.self agregarBotonConfirmarBiblio.self agregarBotonCancelarBiblio.bConfirmarBiblio mouseAction: [ self abreBibliotecaInfo. ].bCancelarBiblio mouseAction: [  self botonEliminaInfoBiblio.].! !!InformacionBiblioteca methodsFor: 'accionBoton' stamp: 'Anonymous 8/11/2024 21:29'!abreBibliotecaInfo"Este método abre un morph con información de la biblioteca elegida""Se almacena la biblioteca, una vez que el usuario seleccione una biblioteca,sino nil"biblio:= eligeBiblio designaElemento.biblio ifNotNil:[  	         bConfirmarBiblio lock.	  	         bConfirmarBiblio  color: (Color r:0 g: 0.65 b:0).	         eligeBiblio lock.	         infoBiblio:= ListadoDeInformacion crearListaDeInfo.	          infoBiblio agregarTextoDeBiblioInfo:biblio.	          infoBiblio position: self position + (500@300).	          self addMorph: infoBiblio.                      	                     	            ]ifNil:[ aviso:=AvisoVisual crearAvisoAlertaOk:'Por favor, seleccione una biblioteca de su interés para continuar.'.	      self addMorph: aviso.	      aviso getBotonOk mouseAction:[aviso delete.].	]. ! !!InformacionBiblioteca methodsFor: 'accionBoton' stamp: 'Anonymous 8/12/2024 18:15'!botonEliminaInfoBiblio"Este método borra el listado de la información de la biblioteca elegida, y el botón de Confirmar Biblioteca cambia a su color original."biblioifNotNil:[	       eligeBiblio unlock.	       bConfirmarBiblio unlock. "Desbloqueamos el boton asi puede seleccionar otra biblioteca"	     	       self removeMorph: infoBiblio.	       bConfirmarBiblio color: (Color fromHexString: '#410200')."Restauramos a su color original"	   		    eligeBiblio reseteaTextoSugerencia:'Seleccione una biblioteca'.	       biblio:=nil.	       	       	       	        ]ifNil:[aviso:=AvisoVisual crearAvisoAlertaOk: 'No ha seleccionado ninguna biblioteca. Por favor, seleccione una biblioteca.'.	 self addMorph: aviso.	aviso getBotonOk mouseAction:[aviso delete.].	].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!InformacionBiblioteca class	instanceVariableNames: ''!!InformacionBiblioteca class methodsFor: 'constructor' stamp: 'Anonymous 8/6/2024 21:34'!crearInfoBiblioCol:unaColBiblio|info|info:= self new.info agregarSelecBiblio: unaColBiblio.^info.! !SeleccionaBotonUsuario subclass: #MiInformacion	instanceVariableNames: 'bDatosPersonales bMisBibliotecas bMisPrestamos bQuitar colBiblioInteres contenedor'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!MiInformacion methodsFor: 'grafica' stamp: 'Anonymous 8/6/2024 21:58'!agregarContenedorcontenedor:=BorderedMorph new.contenedor          color:   (Color fromHexString: '#292c35');          extent: 320@300;          useRoundedCorners;             position: self position  + (100@400).self addMorph: contenedor.! !!MiInformacion methodsFor: 'accionBoton' stamp: 'Anonymous 8/1/2024 19:09'!botonMisPrestamos|listaPrestamos |bMisPrestamos lock.listaPrestamos:=ListadoDeInformacion crearListaDeInfo.listaPrestamos agregarTextoDeBiblioIntPrestamo:colBiblioInteres yUsuario: usuario.listaPrestamos position: self position + (900@400).self addMorph: listaPrestamos.self botonCerrarInfo.bQuitar position: listaPrestamos position + (280@1).listaPrestamos  addMorph:bQuitar.bQuitar mouseAction: [  self removeMorph: listaPrestamos .	                     	                     bMisPrestamos unlock. ].! !!MiInformacion methodsFor: 'accionBoton' stamp: 'Anonymous 8/6/2024 21:51'!agregarString:unString yPosicion:unaPos|palabra texto|palabra:=TextMorph new.texto:= unString asText.texto addAttribute: (TextEmphasis bold)from: 1 to: texto size.palabra  contents: texto ;                    wrapFlag:true;    font:(LogicalFont familyName:       StandardFonts defaultFont familyName pointSize: 14);              extent:310@300;         position: contenedor  position  + (unaPos);         color: Color white;       lock.    contenedor addMorph: palabra .     ! !!MiInformacion methodsFor: 'accionBoton' stamp: 'Anonymous 8/6/2024 21:56'!botonMisDatos|tipo fechaVencPlus|fechaVencPlus:=nil.bDatosPersonales lock.self agregarContenedor.self agregarString:'Dni: '  yPosicion:20@20. self agregarString: (usuario getDni)asString yPosicion:60@20. self agregarString:'Contraseña: '  yPosicion:20@70. self agregarString: (usuario getClave)asString yPosicion:135@70.self agregarString:'Nombre: '  yPosicion:20@120. self agregarString: (usuario getNombre)asString yPosicion:100@120.self agregarString:'Apellido: '  yPosicion:20@170. self agregarString: (usuario getApellido )asString yPosicion:100@170.self agregarString:'Tipo: '  yPosicion:20@220.tipo:='normal'."si es usuario plus: "(usuario esPlus)ifTrue:[tipo:='plus'.fechaVencPlus:=usuario getFechaVenCuota.]. self agregarString: tipo yPosicion:80@220.(fechaVencPlus )ifNotNil:[self agregarString:'Vencimiento: ' yPosicion:20@260.	         self agregarString: (fechaVencPlus)asString yPosicion:140@260. ].self botonCerrarInfo.bQuitar position: contenedor  position + (280@1).contenedor addMorph:bQuitar.bQuitar mouseAction: [  self removeMorph: contenedor .	                     bDatosPersonales unlock. ].! !!MiInformacion methodsFor: 'accionBoton' stamp: 'Anonymous 8/1/2024 19:09'!botonMisBibliotecas|listaBiblio  |bMisBibliotecas lock.listaBiblio:=ListadoDeInformacion crearListaDeInfo.listaBiblio agregarTextoConColBiblioInt:colBiblioInteres.listaBiblio position: self position + (500@400).self addMorph: listaBiblio.self botonCerrarInfo.bQuitar position: listaBiblio position + (280@1).listaBiblio  addMorph:bQuitar.bQuitar mouseAction: [  self removeMorph: listaBiblio .	                     	                     bMisBibliotecas unlock. ].! !!MiInformacion methodsFor: 'accionBoton' stamp: 'Anonymous 8/1/2024 19:08'!botonCerrarInfo|texto |bQuitar   := BotonAccion new.texto := bQuitar    editColor: Color red yEtiquetaBold: 'X'  yTamañoFuente:16.bQuitar             label: texto;               extent: 40@40;           borderColor: (Color red );           borderWidth: 5;           color: (Color black);           useRoundedCorners.                 ! !!MiInformacion methodsFor: 'inicializador' stamp: 'Anonymous 7/31/2024 15:22'!initialize super initialize.self agregarTextoIndicador.self agregarMarcoRectSupColor: (Color fromHexString: '#4169E1') .self agregarTitulo:'Información personal'.self agregarCuadroBotonEnPosicion: 100@300.bDatosPersonales:= self botonOperador: 'Datos Personales'.self agregarCuadroBotonEnPosicion: 500@300.bMisBibliotecas:= self botonOperador: 'Mis Bibliotecas'.self agregarCuadroBotonEnPosicion: 900@300.bMisPrestamos:= self botonOperador: 'Mis Préstamos'.bDatosPersonales mouseAction: [ self botonMisDatos. ].bMisBibliotecas mouseAction: [ self botonMisBibliotecas. ].bMisPrestamos mouseAction: [ self botonMisPrestamos. ].! !!MiInformacion methodsFor: 'inicializador' stamp: 'Anonymous 8/10/2024 12:09'!agregarBiblioInteres:colBiblioInt colBiblioInteres:=colBiblioInt.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiInformacion class	instanceVariableNames: ''!!MiInformacion class methodsFor: 'constructor' stamp: 'Anonymous 8/10/2024 12:09'!crearInformacionUsuario:unUsuario |infoU|infoU:=self new.infoU agregarUsuario: unUsuario.infoU agregarBiblioInteres:unUsuario getColBiblioInt.^infoU.! !SearchMorph subclass: #Selector	instanceVariableNames: 'listaElemento'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!Selector methodsFor: 'grafica' stamp: 'Anonymous 7/28/2024 20:32'!despliegaListaBiblioteca:unaColElemento"unaColElemento puede variar entre las bibliotecas del usuario o del sistema"listaElemento:=Dictionary new.unaColElemento   do:[:b|  listaElemento at: (String streamContents: [:stream |        stream            nextPutAll: 'ID: ';            nextPutAll: b getId asString;            nextPutAll: '-->';            nextPutAll: b getNombre asString. ]) put: b.].self searchList: listaElemento keys. ! !!Selector methodsFor: 'grafica' stamp: 'Anonymous 8/25/2024 00:20'!despliegaListaLibro:unaColElemento"unaColElemento es una coleccion de libros"listaElemento:=Dictionary new.unaColElemento   do:[:l| 	listaElemento at:  (String streamContents: [:stream | 	(l getPrestado)	ifTrue:[		stream nextPutAll: '* '.				].        stream                     nextPutAll: 'ISBN: ';            nextPutAll: l getISBN asString;             nextPutAll: '-->';            nextPutAll: l getNombre asString;            nextPutAll: '| tipo: ';            nextPutAll: l getTipo.               ] ) put: l.        ].self searchList: listaElemento keys.! !!Selector methodsFor: 'grafica' stamp: 'Anonymous 8/12/2024 00:09'!designaElemento| elemento  item|item:=self selectedItem. "se obtiene el item seleccionado"elemento:=nil.itemifNotNil:[elemento:=listaElemento at: item.].^elemento. ! !!Selector methodsFor: 'grafica' stamp: 'Anonymous 7/27/2024 13:03'!agregarTextoSugerencia:unTexto| texto  |texto  := (Text string: unTexto  attribute: TextEmphasis bold).texto  addAttribute: (TextFontReference toFont:(LogicalFont				 familyName: StandardFonts defaultFont familyName				 pointSize: 15 ))from: 1 to: texto size.self ghostText: texto.	! !!Selector methodsFor: 'grafica' stamp: 'Anonymous 7/30/2024 13:41'!reseteaTextoSugerencia:unTexto| texto  |texto  := (Text string: unTexto attribute: TextEmphasis bold).texto  addAttribute: (TextColor color: Color lightGray ) from: 1 to: texto  size.texto  addAttribute: (TextFontReference toFont:(LogicalFont				 familyName: StandardFonts defaultFont familyName				 pointSize: 15 ))from: 1 to: texto size.self updateContentMorphWith:texto.! !!Selector methodsFor: 'inicializador' stamp: 'Anonymous 7/28/2024 21:01'!initialize super initialize.self extent: 320@50.self  font: (LogicalFont familyName:       StandardFonts defaultFont familyName pointSize: 15).self selectionColor: Color blue.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Selector class	instanceVariableNames: ''!!Selector class methodsFor: 'constructor' stamp: 'Anonymous 7/28/2024 10:41'!crearSeleccionadorLibro:unaColElem yTexto:unTexto|selecciona|selecciona := self new.selecciona agregarTextoSugerencia: unTexto.selecciona despliegaListaLibro:unaColElem.^selecciona.! !!Selector class methodsFor: 'constructor' stamp: 'Anonymous 7/28/2024 10:41'!crearSeleccionadorBiblio:unaColElem yTexto:unTexto|selecciona|selecciona := self new.selecciona agregarTextoSugerencia: unTexto.selecciona despliegaListaBiblioteca:unaColElem.^selecciona.! !Object subclass: #Sistema	instanceVariableNames: 'colUsuarios colAutores colBibliotecas'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!Sistema methodsFor: 'aplicacion' stamp: 'Anonymous 7/16/2024 11:23'!buscaBiblioteca:unId|biblio|biblio:= colBibliotecas detect:[:b| b getId = unId] ifNone:[nil].^biblio.! !!Sistema methodsFor: 'aplicacion' stamp: 'Anonymous 7/10/2024 17:29'!validaAcceso:unDni yClave:unaClave|usuarioAux|usuarioAux := colUsuarios detect: [ :usuario| (unDni = usuario getDni) & (unaClave = usuario getClave) ] ifNone:[nil].^usuarioAux.! !!Sistema methodsFor: 'aplicacion' stamp: 'Anonymous 7/9/2024 17:46'!verificaDniUsu:unDni |verifica|verifica:= colUsuarios anySatisfy: [ :usuario| (unDni = usuario getDni)].^verifica.! !!Sistema methodsFor: 'aplicacion' stamp: 'Anonymous 8/7/2024 08:43'!verificaYGuardaAutor:unAutor|verifica|verifica:= colAutores anySatisfy: [ :autor| (unAutor getDni = autor getDni)]."si no encuentra al autor lo guarda"verificaifFalse:[self agregarAutor: unAutor.].! !!Sistema methodsFor: 'aplicacion' stamp: 'Anonymous 7/25/2024 21:34'!verificaLibroISBN:unId|verifica|"Este metodo creo q no va pero si el biblioteca mismoISBN: unId con solo utilizar la biblio"verifica:= colBibliotecas anySatisfy: [ :biblioteca| biblioteca mismoISBN: unId ] .^verifica.! !!Sistema methodsFor: 'aplicacion' stamp: 'Anonymous 7/5/2024 10:49'!verificaBiblioId:unId|verifica|verifica:= colBibliotecas anySatisfy: [ :biblio| biblio getId = unId ].^verifica.! !!Sistema methodsFor: 'aplicacion'!generarListadoUsuarioRetrasados|listaUsuarioRetrasados tuplaUsuarioYBiblio usuarioRetrasado |tuplaUsuarioYBiblio := Array new.listaUsuarioRetrasados := OrderedCollection new.colBibliotecas do:[:biblioteca| usuarioRetrasado:= biblioteca buscarUsuarioRetrasados.	                            ( usuarioRetrasado) 	                          ifNotNil: [ tuplaUsuarioYBiblio:= Array with: usuarioRetrasado  with: biblioteca .		                                    listaUsuarioRetrasados add: tuplaUsuarioYBiblio. 		 ].	 ].^listaUsuarioRetrasados.! !!Sistema methodsFor: 'modificadoras' stamp: 'Anonymous 7/26/2024 12:51'!quitarUsuario:unUsuariocolUsuarios remove:unUsuario.self changed: colUsuarios.! !!Sistema methodsFor: 'inicializador' stamp: 'Anonymous 6/25/2024 13:14'!agregarBiblioteca: unaBibliocolBibliotecas add: unaBiblio.self changed: colBibliotecas.! !!Sistema methodsFor: 'inicializador' stamp: 'Anonymous 8/4/2024 23:28'!agregarAutor:unAutorcolAutores add: unAutor .self changed: colAutores.! !!Sistema methodsFor: 'inicializador' stamp: 'Anonymous 6/25/2024 13:16'!agregarUsuario:unUsuariocolUsuarios add: unUsuario .self changed: colUsuarios .! !!Sistema methodsFor: 'inicializador' stamp: 'Anonymous 8/13/2024 17:18'!cargaDeDatos|  b1 b2 b3 b4 b5 u1 u2  uP1 uP2   l1 l2 l3 l4 l5 l6 l7 l8 l9 l10 l11 l12 l13 l14 l15 colL1 colL2  colL3 colL4 colL5 a1 a2 a3 a4 a5 colPrest1 colPrest2 libros isbn1 isbn2 |"Creamos los autores"a1:=Autor crearDni:  '11' conNombre: 'Balthazar' conApellido:'Vills' .  a2:=Autor crearDni:  '12' conNombre: 'Pilar' conApellido:'Pereira'  .  a3:=Autor crearDni:  '13' conNombre: 'Omar' conApellido:'Zamora' . a4:=Autor crearDni:  '24' conNombre: 'Jose' conApellido:'Perez' . a5:=Autor crearDni: '34' conNombre: 'Catalina' conApellido:'Juber'.    "Agregamos los autores"colAutores add:a1;add:a2;add:a3;add:a4;add:a5. "Creamos colecciones de autores para agregarlos a los libros"colL1:=OrderedCollection new.colL1 add: a5;add:a4; add:a1.colL2 := OrderedCollection new.colL2 add: a1.colL3:=OrderedCollection new.colL3 add: a2; add: a4.colL4:=OrderedCollection new.colL4 add:a3.colL5:=OrderedCollection new.colL5 add: a1; add: a3; add: a5.l1:= LibroElectronico  crearISBN:'1' yNombre:'Las crónicas de Narnia' yEditorial:'Atlas Libros'  yAñoEdi:2000 yAutores:colL1. l2:= LibroElectronico  crearISBN:'2' yNombre:'El código Da Vinci'  yEditorial:'Galaxia Libros'  yAñoEdi:2006  yAutores:colL2 .l3:= LibroElectronico  crearISBN:'3' yNombre:'La divina comedia'  yEditorial:'Origen Editorial'  yAñoEdi:2010  yAutores:colL3.l4:= LibroElectronico crearISBN:'4' yNombre:'Crepúsculo'  yEditorial:'Mar de Letras'  yAñoEdi:2012  yAutores:colL4 .l5:= LibroElectronico  crearISBN:'5' yNombre:'La isla del tesoro'  yEditorial:'Centauro Libros'  yAñoEdi:1999  yAutores:colL5.l6:= LibroImpreso crearISBN:'6' yNombre:'Ficciones'  yEditorial:'Centauro Libros'  yAñoEdi:2002  yAutores:colL1 .l7:= LibroImpreso  crearISBN:'7' yNombre:'El juego de Ender '  yEditorial:'Amanecer gris'  yAñoEdi:2001  yAutores:colL2 .l8:= LibroImpreso crearISBN:'8' yNombre: 'La telaraña de Carlota' yEditorial:'Amanecer gris'  yAñoEdi:1999  yAutores:colL3. l9:= LibroImpreso crearISBN:'9'yNombre: 'Orgullo y prejuicio' yEditorial:'Atlas Libros'  yAñoEdi:1998  yAutores:colL4.l10:= LibroImpreso  crearISBN:'10'yNombre: 'Cien Años de Soledad' yEditorial:'Dias del Mañana'  yAñoEdi:1995  yAutores:colL5.l11:= AudioLibro crearISBN:'11'yNombre: 'El octavo día' yEditorial:'Dias del Mañana'  yAñoEdi:2000  yAutores:colL1.l12:= AudioLibro  crearISBN:'12'yNombre: 'El caminante nocturno' yEditorial:'Atlas Libros'  yAñoEdi:2022  yAutores:colL2.l13:= AudioLibro  crearISBN:'13'yNombre: 'No hay amor sin conexión' yEditorial:'Amanecer gris'  yAñoEdi:2020  yAutores:colL3.l14:= AudioLibro  crearISBN:'14'yNombre: 'Los vengadores' yEditorial:'Atlas Libros'  yAñoEdi:2017  yAutores:colL4.l15:= AudioLibro  crearISBN:'15'yNombre: 'El rito' yEditorial:'Amanecer gris'  yAñoEdi:2015  yAutores:colL5.libros:=OrderedCollection new.libros add:l1;add:l2;add:l3;add:l4;add:l5;add:l6;add:l7;add:l8;add:l9;add:l10;add:l11;add:l12;add:l13;add:l14;add:l15."Creamos los usuarios normales"u1:= Usuario crearDni: '1' conClave:'1'  conNombre:'Ana'  conApellido:'Alcala'. u2:= Usuario crearDni: '2' conClave:'2'  conNombre:'Jose'  conApellido:'Aranda'. "Creamos los usuarios plus"uP1:= UsuarioPlus crearDni: '3' conClave:'3'  conNombre:'Joaquin'  conApellido:'Fontana'.uP2:= UsuarioPlus crearDni: '4' conClave:'4'  conNombre:'Xavier'  conApellido:'Benavides'.  "Agregamos los usuarios y usuarios plus a la colecciion"colUsuarios add:u1;add:u2;add:uP1;add:uP2."Creamos las bibliotecas"b1:= Biblioteca crearId: '1' yDireccion:'Alcorta 108'  yNombre:'Biblioteca del Tiempo'  yTel:'29995698'  yTiempoPrestado:5  yNombreRepresentante: 'Sabio Biblitecario'.b2:= Biblioteca crearId: '2' yDireccion:'Alberdi 567'  yNombre:'Biblioteca Encantada'  yTel:'453454355'  yTiempoPrestado:10  yNombreRepresentante: 'Guardián del conocimiento'.b3:= Biblioteca crearId: '3' yDireccion:'Ramon Diaz 1000'  yNombre:'Biblioteca de las Maravillas'  yTel:'547896666'  yTiempoPrestado:3  yNombreRepresentante: 'Maestro de las Páginas'.b4:= Biblioteca crearId: '4' yDireccion:'Chacabuco 456'  yNombre:'Biblioteca Arcana'  yTel:'444445745'  yTiempoPrestado:10  yNombreRepresentante: 'Custodio de los Libros'.b5:= Biblioteca crearId: '5' yDireccion:'Namuncura 100'  yNombre:'Biblioteca Los Pasos'  yTel:'4478895466'  yTiempoPrestado:5  yNombreRepresentante: 'Guardián del Saber'."Agregamos las bibliotecas a la coleccion"colBibliotecas add: b1.colBibliotecas add: b2.colBibliotecas add: b3.colBibliotecas add: b4.colBibliotecas add: b5."Agregamos bibliotecas de Interes para algunos usuarios"u1 agregarBiblioInteres: b3.u1 agregarBiblioInteres: b1.u1 agregarBiblioInteres: b2.uP2 agregarBiblioInteres: b2."Agregamos libros a las bibliotecas"	colPrest1 := OrderedCollection new.	colPrest2 := OrderedCollection new.	isbn1:= #('1' '2')asArray.	isbn2:= #('6' '11' '12')asArray.libros do:[:libro| |copiaLibro|			copiaLibro:=libro clone.	b1 agregarLibro: copiaLibro.	(isbn1 includes: copiaLibro getISBN)	 ifTrue:[colPrest1 add: copiaLibro.].		copiaLibro:=libro clone.	b2 agregarLibro: copiaLibro.	(isbn2 includes: copiaLibro getISBN)	 ifTrue:[colPrest2 add: copiaLibro.].		copiaLibro:=libro clone.	b3 agregarLibro: copiaLibro.		copiaLibro:=libro clone.	b4 agregarLibro: copiaLibro.		copiaLibro:=libro clone.	b5 agregarLibro: copiaLibro.	].		"Registramos los prestamos" b1 registrarPrestamo: u1 yColLib:  colPrest1 . b2 registrarPrestamo: uP2 yColLib: colPrest2.! !!Sistema methodsFor: 'inicializador' stamp: 'Anonymous 7/3/2024 16:07'!inicializaSistemacolAutores:= Set new.colBibliotecas:= OrderedCollection new.colUsuarios:= OrderedCollection new.! !!Sistema methodsFor: 'observadoras' stamp: 'Anonymous 6/30/2024 16:57'!getColBibliotecas^colBibliotecas .! !!Sistema methodsFor: 'observadoras' stamp: 'Anonymous 6/30/2024 00:20'!getColAutores^colAutores.! !!Sistema methodsFor: 'observadoras' stamp: 'Anonymous 7/25/2024 17:05'!getColUsuarios^colUsuarios.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Sistema class	instanceVariableNames: ''!!Sistema class methodsFor: 'constructor' stamp: 'Anonymous 6/25/2024 20:37'!crearSistConDatos|sistema|sistema := self new.sistema inicializaSistema.sistema cargaDeDatos.^sistema.! !SeleccionaBotonUsuario subclass: #SolicitarPrestamo	instanceVariableNames: 'selecLibro colLibrosSelec biblio bReservarLibro'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!SolicitarPrestamo methodsFor: 'inicializador' stamp: 'Anonymous 8/9/2024 12:44'!initialize |  bRegistraPrest |super initialize.colLibrosSelec:=OrderedCollection new. self agregarMarcoRectSupColor: (Color fromHexString: '#7FFF00').self agregarTitulo: 'Solicitud de préstamo'.self agregarCuadroBotonEnPosicion: 1030@620.bRegistraPrest:=self botonOperador: 'Registrar Préstamo'.self agregarBotonConfirmarBiblio.self agregarBotonCancelarBiblio.bConfirmarBiblio mouseAction: [self abreLibrosDeBibliotecaSelec.] .bCancelarBiblio mouseAction: [ self botonCancelarBiblio. ].bRegistraPrest mouseAction: [ self botonRegistraPrestamo. ].! !!SolicitarPrestamo methodsFor: 'accionBoton' stamp: 'Anonymous 8/1/2024 21:29'!botonReservarLibro|libro|	libro:= selecLibro designaElemento.libroifNotNil:[ "verificamos si el libro seleccionada ya ha sido agregado a la coleccion" 	(colLibrosSelec includes: libro)	ifTrue:[ aviso:=AvisoVisual crearAvisoMalOk: 'El libro ya ha sido seleccionado. Por favor, seleccione otro libro.'. ]	ifFalse:[ "verificamos que el libro no ha sido prestado"		((libro getPrestado) not) "VER, a nivel visual considero que es mejor asi y le quedo claro al usuario que  ese libro no esta disponible"		ifTrue:[		colLibrosSelec add: libro.		       aviso := AvisoVisual crearAvisoBienOk: 'El libro se ha RESERVADO con éxito. Cantidad reservados: ',(colLibrosSelec size)asString.	]ifFalse:[aviso:=AvisoVisual crearAvisoAlertaOk: 'El libro se encuentra prestado. Por favor, seleccione otro libro. '].	 ].      	         ]ifNil:[aviso:=AvisoVisual crearAvisoAlertaOk: 'Por favor, seleccione un libro para continuar.'.	     ].self addMorph: aviso.aviso getBotonOk mouseAction: [aviso delete.].! !!SolicitarPrestamo methodsFor: 'accionBoton' stamp: 'Anonymous 7/29/2024 16:28'!agregaSelectorLibroDeBiblio:unaBiblio|colLibros|colLibros:=unaBiblio getColLibros.selecLibro := Selector crearSeleccionadorLibro: colLibros yTexto:'Seleccione entre 1 a 5 libros'.selecLibro position: self position + (480@320).self addMorph: selecLibro.! !!SolicitarPrestamo methodsFor: 'accionBoton' stamp: 'Anonymous 8/12/2024 00:10'!botonCancelarBibliobiblioifNotNil:[	       eligeBiblio unlock.	       bConfirmarBiblio unlock. "Desbloqueamos el boton asi puede seleccionar otra biblioteca"	       "se esconde el boton , se elimina su contenedor y el selector de libros"	       self removeMorph: cuadro.	       bReservarLibro hide.	       self removeMorph: selecLibro.	       bConfirmarBiblio color: (Color fromHexString: '#410200')."Restauramos a su color original"	   		      eligeBiblio reseteaTextoSugerencia:'Seleccione una biblioteca'.    	       (colLibrosSelec notEmpty )	      ifTrue: [colLibrosSelec:=OrderedCollection new.  ].	   biblio:=nil.]ifNil:[aviso:=AvisoVisual crearAvisoAlertaOk: 'No ha seleccionado ninguna biblioteca. Por favor, seleccione una biblioteca.'.	 self addMorph: aviso.	aviso getBotonOk mouseAction:[aviso delete.].	].! !!SolicitarPrestamo methodsFor: 'accionBoton' stamp: 'Anonymous 8/3/2024 18:27'!agregarAvisoRegistroPrestUsuario|texto|	texto:= 'El préstamo NO se pudo registrar.Esto puede pasar por 3 motivos: puede estar suspendido, tiene un préstamo activo en esta biblioteca o agregó solo audio-libro/s.'.(usuario esPlus)			ifTrue:[	texto:= 'El préstamo NO se pudo registrar.Esto puede pasar por 3 motivos: puede estar suspendido , tiene  préstamos activos en esta biblioteca o no pagó a tiempo (por ser usuario plus).'].		aviso:=AvisoVisual crearAvisoMalOk:texto.	     ! !!SolicitarPrestamo methodsFor: 'accionBoton' stamp: 'Anonymous 8/11/2024 21:47'!botonRegistraPrestamo|registra cantLibros|(biblio notNil & colLibrosSelec isNotEmpty)ifTrue: [ 	       cantLibros:= colLibrosSelec size.		     (cantLibros >= 1 & cantLibros < 6)	      ifTrue:[				 		  biblio addDependent:self.			      registra:= biblio registrarPrestamo: usuario yColLib:colLibrosSelec.	       registra	      ifTrue:[aviso:=AvisoVisual crearAvisoBienOk: 'El préstamo se registró con éxito.'. ]	      ifFalse:[			self agregarAvisoRegistroPrestUsuario.				     ].]ifFalse:[aviso:=AvisoVisual crearAvisoMalOk: 'No se registró el préstamo ya que no ha cumplido con la cantidad de libros.'.	].self addMorph: aviso.  aviso getBotonOk mouseAction: [self delete].	        ]ifFalse:[	(biblio isNil & colLibrosSelec isEmpty )	ifTrue:[aviso:=AvisoVisual crearAvisoAlertaOk:'Por favor, seleccione una biblioteca de su interés y reserve algún libro para continuar.'.]	ifFalse:[	     (colLibrosSelec isEmpty)	      ifTrue:[aviso:=AvisoVisual crearAvisoAlertaOk:'Por favor, reserve algún libro para continuar.'].  	].self addMorph: aviso.aviso getBotonOk mouseAction:[aviso delete.]. ].! !!SolicitarPrestamo methodsFor: 'accionBoton' stamp: 'Anonymous 8/11/2024 21:45'!abreLibrosDeBibliotecaSelec"obtenemos la biblioteca , una vez que  selecciona la biblioteca deseada"biblio:= eligeBiblio designaElemento.biblioifNotNil:[   eligeBiblio lock.	bConfirmarBiblio  lock.	"bloquea el boton"          	         bConfirmarBiblio  color: (Color r:0 g: 0.65 b:0)."Cambia de color a verde, una vez q presiona el boton"        	          self agregaSelectorLibroDeBiblio: biblio. "Agrego selector de libros de la biblioteca seleccionada"  	                    self agregarCuadroBotonEnPosicion: 480@400.            bReservarLibro:=self botonOperador:'Reservar Libro'.	            bReservarLibro mouseAction:[self botonReservarLibro. ].	                     	            ]ifNil:[ aviso:=AvisoVisual crearAvisoAlertaOk:'Por favor, seleccione una biblioteca de su interés para continuar.'.	       self addMorph: aviso.	      aviso getBotonOk mouseAction:[aviso delete.].	]. ! !!SolicitarPrestamo methodsFor: 'grafica' stamp: 'Anonymous 8/14/2024 13:49'!agregaNotaUsuarioLibro|texto nota rectanguloNota|rectanguloNota:=BorderedMorph new.rectanguloNota borderWidth: 4;          color:   (Color fromHexString: '#292c35');          borderColor: Color blue;          extent: 500@150;            position: self position + (850@320).self addMorph: rectanguloNota.nota:=TextMorph new.texto:= 'Nota: Si usted ha seleccionado algún audio-libro, se descartaran al momento que se registre el préstamo ya que no es un usuario plus.' asText.(usuario esPlus)ifTrue:[texto:='Nota: Si selecciona dos tipos de libros diferentes (por ejemplo, impreso/electrónico y audio), estos se registrarán como dos préstamos separados, ya que cada tipo de libro cuenta como un préstamo individual.'asText].texto addAttribute: (TextEmphasis bold)from: 1 to: texto size.nota  contents: texto ;                    wrapFlag:true;    font:(LogicalFont familyName:       StandardFonts defaultFont familyName pointSize: 16);                extent:490@150;         position: rectanguloNota position + (5@5);         color: Color white;       lock.    rectanguloNota  addMorph: nota.    ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SolicitarPrestamo class	instanceVariableNames: ''!!SolicitarPrestamo class methodsFor: 'constructor' stamp: 'Anonymous 8/5/2024 17:36'!crearInterfazSPConUsuario:unUsuario|solicitaPrest|solicitaPrest:= self  crearInterfazUsuario:unUsuario yCol: (unUsuario getColBiblioInt).solicitaPrest agregaNotaUsuarioLibro.^solicitaPrest.! !Object subclass: #Usuario	instanceVariableNames: 'nombre apellido dni contraseña colBiblioInteres diasSusp'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!Usuario methodsFor: 'aplicacion' stamp: 'Anonymous 7/1/2024 11:00'!mismoDni:unUsuario|mismoUsu otroDni|otroDni:= unUsuario getDni.mismoUsu := dni = otroDni.^mismoUsu.! !!Usuario methodsFor: 'aplicacion' stamp: 'Anonymous 7/25/2024 20:34'!esPlus^false.! !!Usuario methodsFor: 'aplicacion' stamp: 'Anonymous 8/10/2024 12:09'!cambiarAPlus:miSistema|usuarioModificado c|c:=OrderedCollection new.usuarioModificado:=UsuarioPlus crearDni: dni conClave:contraseña  conNombre: nombre   conApellido: apellido.colBiblioInteres do:[:biblio| |prestActivo |	    usuarioModificado agregarBiblioInteres: biblio. 	     prestActivo:=(biblio buscarPrestamoUsuario: self).	      prestActivo	     ifNotNil: [                                                  	 prestActivo setUsuario:usuarioModificado.	c add:prestActivo.	].	 ].miSistema quitarUsuario: self.miSistema agregarUsuario: usuarioModificado.self changed: usuarioModificado.^c.! !!Usuario methodsFor: 'aplicacion' stamp: 'Anonymous 6/24/2024 15:38'!suspender: diasMultadiasSusp := diasMulta .! !!Usuario methodsFor: 'aplicacion' stamp: 'Anonymous 6/23/2024 13:05'!verificaFechaVencPlus|verifica|verifica := false.^verifica.! !!Usuario methodsFor: 'aplicacion' stamp: 'Anonymous 6/30/2024 02:20'!seEncuentraSuspendido|suspendido|suspendido := (diasSusp > 0).^suspendido.! !!Usuario methodsFor: 'inicializador' stamp: 'Anonymous 6/30/2024 02:24'!inicializaDni: unDni conClave:unaClave conNombre: unNom conApellido:unApe dni:= unDni .contraseña:= unaClave.nombre:=unNom.apellido:= unApe.colBiblioInteres:=OrderedCollection new. diasSusp:=0.! !!Usuario methodsFor: 'inicializador' stamp: 'Anonymous 8/10/2024 12:09'!agregarBiblioInteres:unaBiblioIntcolBiblioInteres add: unaBiblioInt.self changed: colBiblioInteres.! !!Usuario methodsFor: 'observadores' stamp: 'Anonymous 6/29/2024 23:52'!getDni^dni.! !!Usuario methodsFor: 'observadores' stamp: 'Anonymous 6/30/2024 22:53'!getClave^contraseña .! !!Usuario methodsFor: 'observadores' stamp: 'Anonymous 7/25/2024 00:33'!getColBiblioInt^colBiblioInteres.! !!Usuario methodsFor: 'observadores' stamp: 'Anonymous 6/30/2024 22:52'!getApellido ^apellido .! !!Usuario methodsFor: 'observadores' stamp: 'Anonymous 6/30/2024 22:52'!getNombre ^nombre.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Usuario class	instanceVariableNames: ''!!Usuario class methodsFor: 'constructor' stamp: 'Anonymous 6/23/2024 17:58'!crearDni: unDni conClave:unaClave conNombre: unNom conApellido:unApe |usuario|usuario := self new.usuario inicializaDni: unDni conClave:unaClave conNombre: unNom conApellido:unApe.^usuario.! !Usuario subclass: #UsuarioPlus	instanceVariableNames: 'fechaVencCuota'	classVariableNames: ''	package: 'TrabajoFinalPOO'!!UsuarioPlus methodsFor: 'aplicacion' stamp: 'Anonymous 6/23/2024 18:09'!verificaFechaVencPlus|verifica|verifica := Date today < fechaVencCuota .^verifica.! !!UsuarioPlus methodsFor: 'aplicacion' stamp: 'Anonymous 8/10/2024 12:09'!cambiarAUsuario:miSistema|usuarioModificado |usuarioModificado:=Usuario crearDni: dni conClave:contraseña  conNombre: nombre   conApellido: apellido.colBiblioInteres do:[:biblio| |prestActivos verifica|	    usuarioModificado agregarBiblioInteres: biblio. 	     prestActivos:=(biblio buscarPrestamosActivos: self)."puede haber 2 prestamos"	      prestActivos	     ifNotNil: [  		   prestActivos do:[:prestAct| |libros|                                          	    libros:= prestAct getColLibrosPrest.	      	         "si hay audio-libro  deberiamos devolver el prestamo , ya que cambiamos al usuario normal "	       verifica:= libros anySatisfy:[:libro | (libro esAudioLibro)].  	         (verifica )	          ifTrue:[prestAct devolverLibro: (biblio getDiasMulta).		                biblio quitarPrestamo: prestAct.		]        	           ifFalse:[prestAct setUsuario: usuarioModificado.].		].].	       	].miSistema quitarUsuario: self.miSistema agregarUsuario: usuarioModificado.self changed: usuarioModificado ! !!UsuarioPlus methodsFor: 'aplicacion' stamp: 'Anonymous 7/25/2024 20:43'!esPlus^true.! !!UsuarioPlus methodsFor: 'inicializador' stamp: 'Anonymous 7/31/2024 16:14'!inicializaFechaVencCuofechaVencCuota := (Date today) addDays: 30.! !!UsuarioPlus methodsFor: 'observadora' stamp: 'Anonymous 7/31/2024 16:01'!getFechaVenCuota^fechaVencCuota.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!UsuarioPlus class	instanceVariableNames: ''!!UsuarioPlus class methodsFor: 'constructor' stamp: 'Anonymous 6/30/2024 02:02'!crearDni: unDni conClave:unaClave conNombre: unNom conApellido:unApe |usuarioPlus|usuarioPlus := self new.usuarioPlus inicializaDni: unDni conClave:unaClave conNombre: unNom conApellido:unApe. usuarioPlus inicializaFechaVencCuo.^usuarioPlus.! !